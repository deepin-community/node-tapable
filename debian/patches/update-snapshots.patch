Description: update snapshots
Author: Yadd <yadd@debian.org>
Bug-Debian: https://bugs.debian.org/1047746
Forwarded: no
Last-Update: 2023-08-14

--- a/lib/__tests__/__snapshots__/AsyncParallelHooks.js.snap
+++ b/lib/__tests__/__snapshots__/AsyncParallelHooks.js.snap
@@ -1,714 +1,714 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`AsyncParallelBailHook should have to correct behavior 1`] = `
-Object {
-  "async": Object {
-    "callAsyncMultipleAsyncEarlyError": Object {
+{
+  "async": {
+    "callAsyncMultipleAsyncEarlyError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultipleAsyncEarlyErrorCalled1": true,
-    "callAsyncMultipleAsyncError": Object {
+    "callAsyncMultipleAsyncError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultipleAsyncErrorCalled1": true,
-    "callAsyncMultipleAsyncLateError": Object {
+    "callAsyncMultipleAsyncLateError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultipleAsyncLateErrorCalled1": true,
     "callAsyncMultipleAsyncLateErrorCalled3": true,
-    "callAsyncMultipleAsyncLateErrorEarlyResult1": Object {
+    "callAsyncMultipleAsyncLateErrorEarlyResult1": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultipleAsyncLateErrorEarlyResult1Called1": true,
     "callAsyncMultipleAsyncLateErrorEarlyResult1Called3": true,
-    "callAsyncMultipleAsyncLateErrorEarlyResult2": Object {
+    "callAsyncMultipleAsyncLateErrorEarlyResult2": {
       "type": "async",
       "value": 42,
     },
     "callAsyncMultipleAsyncLateErrorEarlyResult2Called1": true,
     "callAsyncMultipleAsyncLateErrorEarlyResult2Called3": true,
-    "callAsyncMultipleAsyncWithArg": Object {
+    "callAsyncMultipleAsyncWithArg": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultipleAsyncWithArgCalled1": 42,
-    "callAsyncMultipleAsyncWithArgFirstReturn": Object {
+    "callAsyncMultipleAsyncWithArgFirstReturn": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultipleAsyncWithArgFirstReturnCalled1": 42,
-    "callAsyncMultipleAsyncWithArgLastReturn": Object {
+    "callAsyncMultipleAsyncWithArgLastReturn": {
       "type": "async",
       "value": 44,
     },
     "callAsyncMultipleAsyncWithArgLastReturnCalled1": 42,
     "callAsyncMultipleAsyncWithArgLastReturnCalled2": 42,
-    "callAsyncMultipleAsyncWithArgNoReturn": Object {
+    "callAsyncMultipleAsyncWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleAsyncWithArgNoReturnCalled1": 42,
     "callAsyncMultipleAsyncWithArgNoReturnCalled2": 42,
-    "callAsyncMultipleMixed1WithArg": Object {
+    "callAsyncMultipleMixed1WithArg": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultipleMixed1WithArgCalled1": 42,
-    "callAsyncMultipleMixed2WithArg": Object {
+    "callAsyncMultipleMixed2WithArg": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultipleMixed2WithArgCalled1": 42,
     "callAsyncMultipleMixed2WithArgCalled2": 42,
-    "callAsyncMultipleMixed3WithArg": Object {
+    "callAsyncMultipleMixed3WithArg": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultipleMixed3WithArgCalled1": 42,
-    "callAsyncMultipleMixedError1WithArg": Object {
+    "callAsyncMultipleMixedError1WithArg": {
       "type": "async",
       "value": 42,
     },
     "callAsyncMultipleMixedError1WithArgCalled1": 42,
-    "callAsyncMultipleMixedError2WithArg": Object {
+    "callAsyncMultipleMixedError2WithArg": {
       "type": "async",
       "value": 42,
     },
     "callAsyncMultipleMixedError2WithArgCalled1": 42,
-    "callAsyncMultipleMixedError3WithArg": Object {
+    "callAsyncMultipleMixedError3WithArg": {
       "error": "Error in async",
       "type": "async",
     },
     "callAsyncMultipleMixedError3WithArgCalled1": 42,
-    "callAsyncMultipleMixedLateError": Object {
+    "callAsyncMultipleMixedLateError": {
       "error": "Error in async",
       "type": "async",
     },
     "callAsyncMultipleMixedLateErrorCalled1": true,
     "callAsyncMultipleMixedLateErrorCalled2": true,
     "callAsyncMultipleMixedLateErrorCalled3": true,
-    "callAsyncMultiplePromiseEarlyError": Object {
+    "callAsyncMultiplePromiseEarlyError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultiplePromiseEarlyErrorCalled1": true,
     "callAsyncMultiplePromiseEarlyErrorCalled3": true,
-    "callAsyncMultiplePromiseError": Object {
+    "callAsyncMultiplePromiseError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultiplePromiseErrorCalled1": true,
     "callAsyncMultiplePromiseErrorCalled3": true,
-    "callAsyncMultiplePromiseLateError": Object {
+    "callAsyncMultiplePromiseLateError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultiplePromiseLateErrorCalled1": true,
     "callAsyncMultiplePromiseLateErrorCalled3": true,
-    "callAsyncMultiplePromiseWithArg": Object {
+    "callAsyncMultiplePromiseWithArg": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultiplePromiseWithArgCalled1": 42,
     "callAsyncMultiplePromiseWithArgCalled2": 42,
-    "callAsyncMultiplePromiseWithArgFirstReturn": Object {
+    "callAsyncMultiplePromiseWithArgFirstReturn": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultiplePromiseWithArgFirstReturnCalled1": 42,
     "callAsyncMultiplePromiseWithArgFirstReturnCalled2": 42,
-    "callAsyncMultiplePromiseWithArgLastReturn": Object {
+    "callAsyncMultiplePromiseWithArgLastReturn": {
       "type": "async",
       "value": 44,
     },
     "callAsyncMultiplePromiseWithArgLastReturnCalled1": 42,
     "callAsyncMultiplePromiseWithArgLastReturnCalled2": 42,
-    "callAsyncMultiplePromiseWithArgNoReturn": Object {
+    "callAsyncMultiplePromiseWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultiplePromiseWithArgNoReturnCalled1": 42,
     "callAsyncMultiplePromiseWithArgNoReturnCalled2": 42,
-    "callAsyncMultipleSync": Object {
+    "callAsyncMultipleSync": {
       "type": "async",
       "value": 42,
     },
     "callAsyncMultipleSyncCalled1": true,
-    "callAsyncMultipleSyncError": Object {
+    "callAsyncMultipleSyncError": {
       "error": "Error in sync2",
       "type": "async",
     },
     "callAsyncMultipleSyncErrorCalled1": true,
-    "callAsyncMultipleSyncLastReturn": Object {
+    "callAsyncMultipleSyncLastReturn": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultipleSyncLastReturnCalled1": true,
     "callAsyncMultipleSyncLastReturnCalled2": true,
-    "callAsyncMultipleSyncNoReturn": Object {
+    "callAsyncMultipleSyncNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncNoReturnCalled1": true,
     "callAsyncMultipleSyncNoReturnCalled2": true,
-    "callAsyncMultipleSyncWithArg": Object {
+    "callAsyncMultipleSyncWithArg": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultipleSyncWithArgCalled1": 42,
-    "callAsyncMultipleSyncWithArgFirstReturn": Object {
+    "callAsyncMultipleSyncWithArgFirstReturn": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultipleSyncWithArgFirstReturnCalled1": 42,
-    "callAsyncMultipleSyncWithArgLastReturn": Object {
+    "callAsyncMultipleSyncWithArgLastReturn": {
       "type": "async",
       "value": 44,
     },
     "callAsyncMultipleSyncWithArgLastReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgLastReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgNoReturn": Object {
+    "callAsyncMultipleSyncWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgNoReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgNoReturnCalled2": 42,
-    "callAsyncNone": Object {
+    "callAsyncNone": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncNoneWithArg": Object {
+    "callAsyncNoneWithArg": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncSingleAsyncWithArg": Object {
+    "callAsyncSingleAsyncWithArg": {
       "type": "async",
       "value": 42,
     },
     "callAsyncSingleAsyncWithArgCalled1": 42,
-    "callAsyncSinglePromiseWithArg": Object {
+    "callAsyncSinglePromiseWithArg": {
       "type": "async",
       "value": 43,
     },
     "callAsyncSinglePromiseWithArgCalled1": 42,
-    "callAsyncSingleSync": Object {
+    "callAsyncSingleSync": {
       "type": "async",
       "value": 42,
     },
     "callAsyncSingleSyncCalled1": true,
-    "callAsyncSingleSyncWithArg": Object {
+    "callAsyncSingleSyncWithArg": {
       "type": "async",
       "value": 43,
     },
     "callAsyncSingleSyncWithArgCalled1": 42,
-    "callAsyncSingleSyncWithArgNoReturn": Object {
+    "callAsyncSingleSyncWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSingleSyncWithArgNoReturnCalled1": 42,
-    "promiseMultipleAsyncEarlyError": Object {
+    "promiseMultipleAsyncEarlyError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultipleAsyncEarlyErrorCalled1": true,
-    "promiseMultipleAsyncError": Object {
+    "promiseMultipleAsyncError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultipleAsyncErrorCalled1": true,
-    "promiseMultipleAsyncLateError": Object {
+    "promiseMultipleAsyncLateError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultipleAsyncLateErrorCalled1": true,
     "promiseMultipleAsyncLateErrorCalled3": true,
-    "promiseMultipleAsyncLateErrorEarlyResult1": Object {
+    "promiseMultipleAsyncLateErrorEarlyResult1": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultipleAsyncLateErrorEarlyResult1Called1": true,
     "promiseMultipleAsyncLateErrorEarlyResult1Called3": true,
-    "promiseMultipleAsyncLateErrorEarlyResult2": Object {
+    "promiseMultipleAsyncLateErrorEarlyResult2": {
       "type": "promise",
       "value": 42,
     },
     "promiseMultipleAsyncLateErrorEarlyResult2Called1": true,
     "promiseMultipleAsyncLateErrorEarlyResult2Called3": true,
-    "promiseMultipleAsyncWithArg": Object {
+    "promiseMultipleAsyncWithArg": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultipleAsyncWithArgCalled1": 42,
-    "promiseMultipleAsyncWithArgFirstReturn": Object {
+    "promiseMultipleAsyncWithArgFirstReturn": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultipleAsyncWithArgFirstReturnCalled1": 42,
-    "promiseMultipleAsyncWithArgLastReturn": Object {
+    "promiseMultipleAsyncWithArgLastReturn": {
       "type": "promise",
       "value": 44,
     },
     "promiseMultipleAsyncWithArgLastReturnCalled1": 42,
     "promiseMultipleAsyncWithArgLastReturnCalled2": 42,
-    "promiseMultipleAsyncWithArgNoReturn": Object {
+    "promiseMultipleAsyncWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleAsyncWithArgNoReturnCalled1": 42,
     "promiseMultipleAsyncWithArgNoReturnCalled2": 42,
-    "promiseMultipleMixed1WithArg": Object {
+    "promiseMultipleMixed1WithArg": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultipleMixed1WithArgCalled1": 42,
-    "promiseMultipleMixed2WithArg": Object {
+    "promiseMultipleMixed2WithArg": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultipleMixed2WithArgCalled1": 42,
     "promiseMultipleMixed2WithArgCalled2": 42,
-    "promiseMultipleMixed3WithArg": Object {
+    "promiseMultipleMixed3WithArg": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultipleMixed3WithArgCalled1": 42,
-    "promiseMultipleMixedError1WithArg": Object {
+    "promiseMultipleMixedError1WithArg": {
       "type": "promise",
       "value": 42,
     },
     "promiseMultipleMixedError1WithArgCalled1": 42,
-    "promiseMultipleMixedError2WithArg": Object {
+    "promiseMultipleMixedError2WithArg": {
       "type": "promise",
       "value": 42,
     },
     "promiseMultipleMixedError2WithArgCalled1": 42,
-    "promiseMultipleMixedError3WithArg": Object {
+    "promiseMultipleMixedError3WithArg": {
       "error": "Error in async",
       "type": "promise",
     },
     "promiseMultipleMixedError3WithArgCalled1": 42,
-    "promiseMultipleMixedLateError": Object {
+    "promiseMultipleMixedLateError": {
       "error": "Error in async",
       "type": "promise",
     },
     "promiseMultipleMixedLateErrorCalled1": true,
     "promiseMultipleMixedLateErrorCalled2": true,
     "promiseMultipleMixedLateErrorCalled3": true,
-    "promiseMultiplePromiseEarlyError": Object {
+    "promiseMultiplePromiseEarlyError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultiplePromiseEarlyErrorCalled1": true,
     "promiseMultiplePromiseEarlyErrorCalled3": true,
-    "promiseMultiplePromiseError": Object {
+    "promiseMultiplePromiseError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultiplePromiseErrorCalled1": true,
     "promiseMultiplePromiseErrorCalled3": true,
-    "promiseMultiplePromiseLateError": Object {
+    "promiseMultiplePromiseLateError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultiplePromiseLateErrorCalled1": true,
     "promiseMultiplePromiseLateErrorCalled3": true,
-    "promiseMultiplePromiseWithArg": Object {
+    "promiseMultiplePromiseWithArg": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultiplePromiseWithArgCalled1": 42,
     "promiseMultiplePromiseWithArgCalled2": 42,
-    "promiseMultiplePromiseWithArgFirstReturn": Object {
+    "promiseMultiplePromiseWithArgFirstReturn": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultiplePromiseWithArgFirstReturnCalled1": 42,
     "promiseMultiplePromiseWithArgFirstReturnCalled2": 42,
-    "promiseMultiplePromiseWithArgLastReturn": Object {
+    "promiseMultiplePromiseWithArgLastReturn": {
       "type": "promise",
       "value": 44,
     },
     "promiseMultiplePromiseWithArgLastReturnCalled1": 42,
     "promiseMultiplePromiseWithArgLastReturnCalled2": 42,
-    "promiseMultiplePromiseWithArgNoReturn": Object {
+    "promiseMultiplePromiseWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultiplePromiseWithArgNoReturnCalled1": 42,
     "promiseMultiplePromiseWithArgNoReturnCalled2": 42,
-    "promiseMultipleSync": Object {
+    "promiseMultipleSync": {
       "type": "promise",
       "value": 42,
     },
     "promiseMultipleSyncCalled1": true,
-    "promiseMultipleSyncError": Object {
+    "promiseMultipleSyncError": {
       "error": "Error in sync2",
       "type": "promise",
     },
     "promiseMultipleSyncErrorCalled1": true,
-    "promiseMultipleSyncLastReturn": Object {
+    "promiseMultipleSyncLastReturn": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultipleSyncLastReturnCalled1": true,
     "promiseMultipleSyncLastReturnCalled2": true,
-    "promiseMultipleSyncNoReturn": Object {
+    "promiseMultipleSyncNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncNoReturnCalled1": true,
     "promiseMultipleSyncNoReturnCalled2": true,
-    "promiseMultipleSyncWithArg": Object {
+    "promiseMultipleSyncWithArg": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultipleSyncWithArgCalled1": 42,
-    "promiseMultipleSyncWithArgFirstReturn": Object {
+    "promiseMultipleSyncWithArgFirstReturn": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultipleSyncWithArgFirstReturnCalled1": 42,
-    "promiseMultipleSyncWithArgLastReturn": Object {
+    "promiseMultipleSyncWithArgLastReturn": {
       "type": "promise",
       "value": 44,
     },
     "promiseMultipleSyncWithArgLastReturnCalled1": 42,
     "promiseMultipleSyncWithArgLastReturnCalled2": 42,
-    "promiseMultipleSyncWithArgNoReturn": Object {
+    "promiseMultipleSyncWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgNoReturnCalled1": 42,
     "promiseMultipleSyncWithArgNoReturnCalled2": 42,
-    "promiseNone": Object {
+    "promiseNone": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseNoneWithArg": Object {
+    "promiseNoneWithArg": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseSingleAsyncWithArg": Object {
+    "promiseSingleAsyncWithArg": {
       "type": "promise",
       "value": 42,
     },
     "promiseSingleAsyncWithArgCalled1": 42,
-    "promiseSinglePromiseWithArg": Object {
+    "promiseSinglePromiseWithArg": {
       "type": "promise",
       "value": 43,
     },
     "promiseSinglePromiseWithArgCalled1": 42,
-    "promiseSingleSync": Object {
+    "promiseSingleSync": {
       "type": "promise",
       "value": 42,
     },
     "promiseSingleSyncCalled1": true,
-    "promiseSingleSyncWithArg": Object {
+    "promiseSingleSyncWithArg": {
       "type": "promise",
       "value": 43,
     },
     "promiseSingleSyncWithArgCalled1": 42,
-    "promiseSingleSyncWithArgNoReturn": Object {
+    "promiseSingleSyncWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseSingleSyncWithArgNoReturnCalled1": 42,
   },
-  "intercept": Object {
-    "callAsyncContextIntercepted": Object {
+  "intercept": {
+    "callAsyncContextIntercepted": {
       "type": "async",
       "value": 48,
     },
-    "callAsyncContextInterceptedCall1": Array [
-      Object {
+    "callAsyncContextInterceptedCall1": [
+      {
         "number": 42,
       },
       1,
       2,
       3,
     ],
-    "callAsyncContextInterceptedCall2": Array [
+    "callAsyncContextInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "callAsyncContextInterceptedTap1": Object {
+    "callAsyncContextInterceptedTap1": {
       "number": 42,
     },
-    "callAsyncIntercepted": Object {
+    "callAsyncIntercepted": {
       "type": "async",
       "value": 6,
     },
-    "callAsyncInterceptedCall1": Array [
+    "callAsyncInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedCall2": Array [
+    "callAsyncInterceptedCall2": [
       1,
       2,
       3,
     ],
     "callAsyncInterceptedResult1": 6,
     "callAsyncInterceptedResult2": 6,
-    "callAsyncInterceptedTap1": Object {
+    "callAsyncInterceptedTap1": {
       "fn": 3,
       "name": "sync",
       "type": "sync",
     },
-    "callAsyncInterceptedTap2": Object {
+    "callAsyncInterceptedTap2": {
       "fn": 3,
       "name": "sync",
       "type": "sync",
     },
-    "callAsyncUnusedContextIntercepted": Object {
+    "callAsyncUnusedContextIntercepted": {
       "type": "async",
       "value": 6,
     },
-    "callAsyncUnusedContextInterceptedCall1": Array [
+    "callAsyncUnusedContextInterceptedCall1": [
       undefined,
       1,
       2,
       3,
     ],
-    "callAsyncUnusedContextInterceptedCall2": Array [
+    "callAsyncUnusedContextInterceptedCall2": [
       1,
       2,
       3,
     ],
     "callAsyncUnusedContextInterceptedTap1": undefined,
-    "promiseContextIntercepted": Object {
+    "promiseContextIntercepted": {
       "type": "promise",
       "value": 48,
     },
-    "promiseContextInterceptedCall1": Array [
-      Object {
+    "promiseContextInterceptedCall1": [
+      {
         "number": 42,
       },
       1,
       2,
       3,
     ],
-    "promiseContextInterceptedCall2": Array [
+    "promiseContextInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "promiseContextInterceptedTap1": Object {
+    "promiseContextInterceptedTap1": {
       "number": 42,
     },
-    "promiseIntercepted": Object {
+    "promiseIntercepted": {
       "type": "promise",
       "value": 6,
     },
-    "promiseInterceptedCall1": Array [
+    "promiseInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedCall2": Array [
+    "promiseInterceptedCall2": [
       1,
       2,
       3,
     ],
     "promiseInterceptedResult1": 6,
     "promiseInterceptedResult2": 6,
-    "promiseInterceptedTap1": Object {
+    "promiseInterceptedTap1": {
       "fn": 3,
       "name": "sync",
       "type": "sync",
     },
-    "promiseInterceptedTap2": Object {
+    "promiseInterceptedTap2": {
       "fn": 3,
       "name": "sync",
       "type": "sync",
     },
-    "promiseUnusedContextIntercepted": Object {
+    "promiseUnusedContextIntercepted": {
       "type": "promise",
       "value": 6,
     },
-    "promiseUnusedContextInterceptedCall1": Array [
+    "promiseUnusedContextInterceptedCall1": [
       undefined,
       1,
       2,
       3,
     ],
-    "promiseUnusedContextInterceptedCall2": Array [
+    "promiseUnusedContextInterceptedCall2": [
       1,
       2,
       3,
     ],
     "promiseUnusedContextInterceptedTap1": undefined,
   },
-  "sync": Object {
-    "callAsyncIntercepted": Object {
+  "sync": {
+    "callAsyncIntercepted": {
       "type": "async",
       "value": 6,
     },
-    "callAsyncInterceptedCall1": Array [
+    "callAsyncInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedCall2": Array [
+    "callAsyncInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedTap1": Object {
+    "callAsyncInterceptedTap1": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "callAsyncInterceptedTap2": Object {
+    "callAsyncInterceptedTap2": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "callAsyncMultipleSync": Object {
+    "callAsyncMultipleSync": {
       "type": "async",
       "value": 42,
     },
     "callAsyncMultipleSyncCalled1": true,
-    "callAsyncMultipleSyncError": Object {
+    "callAsyncMultipleSyncError": {
       "error": "Error in sync2",
       "type": "async",
     },
     "callAsyncMultipleSyncErrorCalled1": true,
     "callAsyncMultipleSyncErrorCalled2": true,
-    "callAsyncMultipleSyncWithArg": Object {
+    "callAsyncMultipleSyncWithArg": {
       "type": "async",
       "value": 84,
     },
     "callAsyncMultipleSyncWithArgCalled1": 42,
-    "callAsyncMultipleSyncWithArgFirstReturn": Object {
+    "callAsyncMultipleSyncWithArgFirstReturn": {
       "type": "async",
       "value": 84,
     },
     "callAsyncMultipleSyncWithArgFirstReturnCalled1": 42,
-    "callAsyncMultipleSyncWithArgLastReturn": Object {
+    "callAsyncMultipleSyncWithArgLastReturn": {
       "type": "async",
       "value": 85,
     },
     "callAsyncMultipleSyncWithArgLastReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgLastReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgNoReturn": Object {
+    "callAsyncMultipleSyncWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgNoReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgNoReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgs": Object {
+    "callAsyncMultipleSyncWithArgs": {
       "type": "async",
       "value": 129,
     },
-    "callAsyncMultipleSyncWithArgsCalled1": Array [
+    "callAsyncMultipleSyncWithArgsCalled1": [
       42,
       43,
       44,
     ],
-    "callAsyncNone": Object {
+    "callAsyncNone": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncNoneWithArg": Object {
+    "callAsyncNoneWithArg": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncSingleSync": Object {
+    "callAsyncSingleSync": {
       "type": "async",
       "value": 42,
     },
     "callAsyncSingleSyncCalled": true,
-    "callAsyncSingleSyncWithArg": Object {
+    "callAsyncSingleSyncWithArg": {
       "type": "async",
       "value": 42,
     },
     "callAsyncSingleSyncWithArgCalled": 42,
-    "promiseIntercepted": Object {
+    "promiseIntercepted": {
       "type": "promise",
       "value": 6,
     },
-    "promiseInterceptedCall1": Array [
+    "promiseInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedCall2": Array [
+    "promiseInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedTap1": Object {
+    "promiseInterceptedTap1": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "promiseInterceptedTap2": Object {
+    "promiseInterceptedTap2": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "promiseMultipleSync": Object {
+    "promiseMultipleSync": {
       "type": "promise",
       "value": 42,
     },
     "promiseMultipleSyncCalled1": true,
-    "promiseMultipleSyncError": Object {
+    "promiseMultipleSyncError": {
       "error": "Error in sync2",
       "type": "promise",
     },
     "promiseMultipleSyncErrorCalled1": true,
     "promiseMultipleSyncErrorCalled2": true,
-    "promiseMultipleSyncWithArg": Object {
+    "promiseMultipleSyncWithArg": {
       "type": "promise",
       "value": 84,
     },
     "promiseMultipleSyncWithArgCalled1": 42,
-    "promiseMultipleSyncWithArgFirstReturn": Object {
+    "promiseMultipleSyncWithArgFirstReturn": {
       "type": "promise",
       "value": 84,
     },
     "promiseMultipleSyncWithArgFirstReturnCalled1": 42,
-    "promiseMultipleSyncWithArgLastReturn": Object {
+    "promiseMultipleSyncWithArgLastReturn": {
       "type": "promise",
       "value": 85,
     },
     "promiseMultipleSyncWithArgLastReturnCalled1": 42,
     "promiseMultipleSyncWithArgLastReturnCalled2": 42,
-    "promiseMultipleSyncWithArgNoReturn": Object {
+    "promiseMultipleSyncWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgNoReturnCalled1": 42,
     "promiseMultipleSyncWithArgNoReturnCalled2": 42,
-    "promiseMultipleSyncWithArgs": Object {
+    "promiseMultipleSyncWithArgs": {
       "type": "promise",
       "value": 129,
     },
-    "promiseMultipleSyncWithArgsCalled1": Array [
+    "promiseMultipleSyncWithArgsCalled1": [
       42,
       43,
       44,
     ],
-    "promiseNone": Object {
+    "promiseNone": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseNoneWithArg": Object {
+    "promiseNoneWithArg": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseSingleSync": Object {
+    "promiseSingleSync": {
       "type": "promise",
       "value": 42,
     },
     "promiseSingleSyncCalled": true,
-    "promiseSingleSyncWithArg": Object {
+    "promiseSingleSyncWithArg": {
       "type": "promise",
       "value": 42,
     },
@@ -718,756 +718,756 @@
 `;
 
 exports[`AsyncParallelHook should have to correct behavior 1`] = `
-Object {
-  "async": Object {
-    "callAsyncMultipleAsyncEarlyError": Object {
+{
+  "async": {
+    "callAsyncMultipleAsyncEarlyError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultipleAsyncEarlyErrorCalled1": true,
-    "callAsyncMultipleAsyncError": Object {
+    "callAsyncMultipleAsyncError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultipleAsyncErrorCalled1": true,
-    "callAsyncMultipleAsyncLateError": Object {
+    "callAsyncMultipleAsyncLateError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultipleAsyncLateErrorCalled1": true,
     "callAsyncMultipleAsyncLateErrorCalled3": true,
-    "callAsyncMultipleAsyncLateErrorEarlyResult1": Object {
+    "callAsyncMultipleAsyncLateErrorEarlyResult1": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultipleAsyncLateErrorEarlyResult1Called1": true,
     "callAsyncMultipleAsyncLateErrorEarlyResult1Called3": true,
-    "callAsyncMultipleAsyncLateErrorEarlyResult2": Object {
+    "callAsyncMultipleAsyncLateErrorEarlyResult2": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultipleAsyncLateErrorEarlyResult2Called1": true,
     "callAsyncMultipleAsyncLateErrorEarlyResult2Called3": true,
-    "callAsyncMultipleAsyncWithArg": Object {
+    "callAsyncMultipleAsyncWithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleAsyncWithArgCalled1": 42,
     "callAsyncMultipleAsyncWithArgCalled2": 42,
-    "callAsyncMultipleAsyncWithArgFirstReturn": Object {
+    "callAsyncMultipleAsyncWithArgFirstReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleAsyncWithArgFirstReturnCalled1": 42,
     "callAsyncMultipleAsyncWithArgFirstReturnCalled2": 42,
-    "callAsyncMultipleAsyncWithArgLastReturn": Object {
+    "callAsyncMultipleAsyncWithArgLastReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleAsyncWithArgLastReturnCalled1": 42,
     "callAsyncMultipleAsyncWithArgLastReturnCalled2": 42,
-    "callAsyncMultipleAsyncWithArgNoReturn": Object {
+    "callAsyncMultipleAsyncWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleAsyncWithArgNoReturnCalled1": 42,
     "callAsyncMultipleAsyncWithArgNoReturnCalled2": 42,
-    "callAsyncMultipleMixed1WithArg": Object {
+    "callAsyncMultipleMixed1WithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleMixed1WithArgCalled1": 42,
     "callAsyncMultipleMixed1WithArgCalled2": 42,
     "callAsyncMultipleMixed1WithArgCalled3": 42,
-    "callAsyncMultipleMixed2WithArg": Object {
+    "callAsyncMultipleMixed2WithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleMixed2WithArgCalled1": 42,
     "callAsyncMultipleMixed2WithArgCalled2": 42,
-    "callAsyncMultipleMixed3WithArg": Object {
+    "callAsyncMultipleMixed3WithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleMixed3WithArgCalled1": 42,
     "callAsyncMultipleMixed3WithArgCalled2": 42,
     "callAsyncMultipleMixed3WithArgCalled3": 42,
-    "callAsyncMultipleMixedError1WithArg": Object {
+    "callAsyncMultipleMixedError1WithArg": {
       "error": "Error in sync",
       "type": "async",
     },
     "callAsyncMultipleMixedError1WithArgCalled1": 42,
     "callAsyncMultipleMixedError1WithArgCalled2": 42,
     "callAsyncMultipleMixedError1WithArgCalled3": 42,
-    "callAsyncMultipleMixedError2WithArg": Object {
+    "callAsyncMultipleMixedError2WithArg": {
       "error": "Error in promise",
       "type": "async",
     },
     "callAsyncMultipleMixedError2WithArgCalled1": 42,
     "callAsyncMultipleMixedError2WithArgCalled2": 42,
     "callAsyncMultipleMixedError2WithArgCalled3": 42,
-    "callAsyncMultipleMixedError3WithArg": Object {
+    "callAsyncMultipleMixedError3WithArg": {
       "error": "Error in async",
       "type": "async",
     },
     "callAsyncMultipleMixedError3WithArgCalled1": 42,
-    "callAsyncMultipleMixedLateError": Object {
+    "callAsyncMultipleMixedLateError": {
       "error": "Error in async",
       "type": "async",
     },
     "callAsyncMultipleMixedLateErrorCalled1": true,
     "callAsyncMultipleMixedLateErrorCalled2": true,
     "callAsyncMultipleMixedLateErrorCalled3": true,
-    "callAsyncMultiplePromiseEarlyError": Object {
+    "callAsyncMultiplePromiseEarlyError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultiplePromiseEarlyErrorCalled1": true,
     "callAsyncMultiplePromiseEarlyErrorCalled3": true,
-    "callAsyncMultiplePromiseError": Object {
+    "callAsyncMultiplePromiseError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultiplePromiseErrorCalled1": true,
     "callAsyncMultiplePromiseErrorCalled3": true,
-    "callAsyncMultiplePromiseLateError": Object {
+    "callAsyncMultiplePromiseLateError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultiplePromiseLateErrorCalled1": true,
     "callAsyncMultiplePromiseLateErrorCalled3": true,
-    "callAsyncMultiplePromiseWithArg": Object {
+    "callAsyncMultiplePromiseWithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultiplePromiseWithArgCalled1": 42,
     "callAsyncMultiplePromiseWithArgCalled2": 42,
-    "callAsyncMultiplePromiseWithArgFirstReturn": Object {
+    "callAsyncMultiplePromiseWithArgFirstReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultiplePromiseWithArgFirstReturnCalled1": 42,
     "callAsyncMultiplePromiseWithArgFirstReturnCalled2": 42,
-    "callAsyncMultiplePromiseWithArgLastReturn": Object {
+    "callAsyncMultiplePromiseWithArgLastReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultiplePromiseWithArgLastReturnCalled1": 42,
     "callAsyncMultiplePromiseWithArgLastReturnCalled2": 42,
-    "callAsyncMultiplePromiseWithArgNoReturn": Object {
+    "callAsyncMultiplePromiseWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultiplePromiseWithArgNoReturnCalled1": 42,
     "callAsyncMultiplePromiseWithArgNoReturnCalled2": 42,
-    "callAsyncMultipleSync": Object {
+    "callAsyncMultipleSync": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncCalled1": true,
     "callAsyncMultipleSyncCalled2": true,
-    "callAsyncMultipleSyncError": Object {
+    "callAsyncMultipleSyncError": {
       "error": "Error in sync2",
       "type": "async",
     },
     "callAsyncMultipleSyncErrorCalled1": true,
-    "callAsyncMultipleSyncLastReturn": Object {
+    "callAsyncMultipleSyncLastReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncLastReturnCalled1": true,
     "callAsyncMultipleSyncLastReturnCalled2": true,
-    "callAsyncMultipleSyncNoReturn": Object {
+    "callAsyncMultipleSyncNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncNoReturnCalled1": true,
     "callAsyncMultipleSyncNoReturnCalled2": true,
-    "callAsyncMultipleSyncWithArg": Object {
+    "callAsyncMultipleSyncWithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgCalled1": 42,
     "callAsyncMultipleSyncWithArgCalled2": 42,
-    "callAsyncMultipleSyncWithArgFirstReturn": Object {
+    "callAsyncMultipleSyncWithArgFirstReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgFirstReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgFirstReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgLastReturn": Object {
+    "callAsyncMultipleSyncWithArgLastReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgLastReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgLastReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgNoReturn": Object {
+    "callAsyncMultipleSyncWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgNoReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgNoReturnCalled2": 42,
-    "callAsyncNone": Object {
+    "callAsyncNone": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncNoneWithArg": Object {
+    "callAsyncNoneWithArg": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncSingleAsyncWithArg": Object {
+    "callAsyncSingleAsyncWithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSingleAsyncWithArgCalled1": 42,
-    "callAsyncSinglePromiseWithArg": Object {
+    "callAsyncSinglePromiseWithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSinglePromiseWithArgCalled1": 42,
-    "callAsyncSingleSync": Object {
+    "callAsyncSingleSync": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSingleSyncCalled1": true,
-    "callAsyncSingleSyncWithArg": Object {
+    "callAsyncSingleSyncWithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSingleSyncWithArgCalled1": 42,
-    "callAsyncSingleSyncWithArgNoReturn": Object {
+    "callAsyncSingleSyncWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSingleSyncWithArgNoReturnCalled1": 42,
-    "promiseMultipleAsyncEarlyError": Object {
+    "promiseMultipleAsyncEarlyError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultipleAsyncEarlyErrorCalled1": true,
-    "promiseMultipleAsyncError": Object {
+    "promiseMultipleAsyncError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultipleAsyncErrorCalled1": true,
-    "promiseMultipleAsyncLateError": Object {
+    "promiseMultipleAsyncLateError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultipleAsyncLateErrorCalled1": true,
     "promiseMultipleAsyncLateErrorCalled3": true,
-    "promiseMultipleAsyncLateErrorEarlyResult1": Object {
+    "promiseMultipleAsyncLateErrorEarlyResult1": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultipleAsyncLateErrorEarlyResult1Called1": true,
     "promiseMultipleAsyncLateErrorEarlyResult1Called3": true,
-    "promiseMultipleAsyncLateErrorEarlyResult2": Object {
+    "promiseMultipleAsyncLateErrorEarlyResult2": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultipleAsyncLateErrorEarlyResult2Called1": true,
     "promiseMultipleAsyncLateErrorEarlyResult2Called3": true,
-    "promiseMultipleAsyncWithArg": Object {
+    "promiseMultipleAsyncWithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleAsyncWithArgCalled1": 42,
     "promiseMultipleAsyncWithArgCalled2": 42,
-    "promiseMultipleAsyncWithArgFirstReturn": Object {
+    "promiseMultipleAsyncWithArgFirstReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleAsyncWithArgFirstReturnCalled1": 42,
     "promiseMultipleAsyncWithArgFirstReturnCalled2": 42,
-    "promiseMultipleAsyncWithArgLastReturn": Object {
+    "promiseMultipleAsyncWithArgLastReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleAsyncWithArgLastReturnCalled1": 42,
     "promiseMultipleAsyncWithArgLastReturnCalled2": 42,
-    "promiseMultipleAsyncWithArgNoReturn": Object {
+    "promiseMultipleAsyncWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleAsyncWithArgNoReturnCalled1": 42,
     "promiseMultipleAsyncWithArgNoReturnCalled2": 42,
-    "promiseMultipleMixed1WithArg": Object {
+    "promiseMultipleMixed1WithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleMixed1WithArgCalled1": 42,
     "promiseMultipleMixed1WithArgCalled2": 42,
     "promiseMultipleMixed1WithArgCalled3": 42,
-    "promiseMultipleMixed2WithArg": Object {
+    "promiseMultipleMixed2WithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleMixed2WithArgCalled1": 42,
     "promiseMultipleMixed2WithArgCalled2": 42,
-    "promiseMultipleMixed3WithArg": Object {
+    "promiseMultipleMixed3WithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleMixed3WithArgCalled1": 42,
     "promiseMultipleMixed3WithArgCalled2": 42,
     "promiseMultipleMixed3WithArgCalled3": 42,
-    "promiseMultipleMixedError1WithArg": Object {
+    "promiseMultipleMixedError1WithArg": {
       "error": "Error in sync",
       "type": "promise",
     },
     "promiseMultipleMixedError1WithArgCalled1": 42,
     "promiseMultipleMixedError1WithArgCalled2": 42,
     "promiseMultipleMixedError1WithArgCalled3": 42,
-    "promiseMultipleMixedError2WithArg": Object {
+    "promiseMultipleMixedError2WithArg": {
       "error": "Error in promise",
       "type": "promise",
     },
     "promiseMultipleMixedError2WithArgCalled1": 42,
     "promiseMultipleMixedError2WithArgCalled2": 42,
     "promiseMultipleMixedError2WithArgCalled3": 42,
-    "promiseMultipleMixedError3WithArg": Object {
+    "promiseMultipleMixedError3WithArg": {
       "error": "Error in async",
       "type": "promise",
     },
     "promiseMultipleMixedError3WithArgCalled1": 42,
-    "promiseMultipleMixedLateError": Object {
+    "promiseMultipleMixedLateError": {
       "error": "Error in async",
       "type": "promise",
     },
     "promiseMultipleMixedLateErrorCalled1": true,
     "promiseMultipleMixedLateErrorCalled2": true,
     "promiseMultipleMixedLateErrorCalled3": true,
-    "promiseMultiplePromiseEarlyError": Object {
+    "promiseMultiplePromiseEarlyError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultiplePromiseEarlyErrorCalled1": true,
     "promiseMultiplePromiseEarlyErrorCalled3": true,
-    "promiseMultiplePromiseError": Object {
+    "promiseMultiplePromiseError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultiplePromiseErrorCalled1": true,
     "promiseMultiplePromiseErrorCalled3": true,
-    "promiseMultiplePromiseLateError": Object {
+    "promiseMultiplePromiseLateError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultiplePromiseLateErrorCalled1": true,
     "promiseMultiplePromiseLateErrorCalled3": true,
-    "promiseMultiplePromiseWithArg": Object {
+    "promiseMultiplePromiseWithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultiplePromiseWithArgCalled1": 42,
     "promiseMultiplePromiseWithArgCalled2": 42,
-    "promiseMultiplePromiseWithArgFirstReturn": Object {
+    "promiseMultiplePromiseWithArgFirstReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultiplePromiseWithArgFirstReturnCalled1": 42,
     "promiseMultiplePromiseWithArgFirstReturnCalled2": 42,
-    "promiseMultiplePromiseWithArgLastReturn": Object {
+    "promiseMultiplePromiseWithArgLastReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultiplePromiseWithArgLastReturnCalled1": 42,
     "promiseMultiplePromiseWithArgLastReturnCalled2": 42,
-    "promiseMultiplePromiseWithArgNoReturn": Object {
+    "promiseMultiplePromiseWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultiplePromiseWithArgNoReturnCalled1": 42,
     "promiseMultiplePromiseWithArgNoReturnCalled2": 42,
-    "promiseMultipleSync": Object {
+    "promiseMultipleSync": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncCalled1": true,
     "promiseMultipleSyncCalled2": true,
-    "promiseMultipleSyncError": Object {
+    "promiseMultipleSyncError": {
       "error": "Error in sync2",
       "type": "promise",
     },
     "promiseMultipleSyncErrorCalled1": true,
-    "promiseMultipleSyncLastReturn": Object {
+    "promiseMultipleSyncLastReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncLastReturnCalled1": true,
     "promiseMultipleSyncLastReturnCalled2": true,
-    "promiseMultipleSyncNoReturn": Object {
+    "promiseMultipleSyncNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncNoReturnCalled1": true,
     "promiseMultipleSyncNoReturnCalled2": true,
-    "promiseMultipleSyncWithArg": Object {
+    "promiseMultipleSyncWithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgCalled1": 42,
     "promiseMultipleSyncWithArgCalled2": 42,
-    "promiseMultipleSyncWithArgFirstReturn": Object {
+    "promiseMultipleSyncWithArgFirstReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgFirstReturnCalled1": 42,
     "promiseMultipleSyncWithArgFirstReturnCalled2": 42,
-    "promiseMultipleSyncWithArgLastReturn": Object {
+    "promiseMultipleSyncWithArgLastReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgLastReturnCalled1": 42,
     "promiseMultipleSyncWithArgLastReturnCalled2": 42,
-    "promiseMultipleSyncWithArgNoReturn": Object {
+    "promiseMultipleSyncWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgNoReturnCalled1": 42,
     "promiseMultipleSyncWithArgNoReturnCalled2": 42,
-    "promiseNone": Object {
+    "promiseNone": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseNoneWithArg": Object {
+    "promiseNoneWithArg": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseSingleAsyncWithArg": Object {
+    "promiseSingleAsyncWithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseSingleAsyncWithArgCalled1": 42,
-    "promiseSinglePromiseWithArg": Object {
+    "promiseSinglePromiseWithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseSinglePromiseWithArgCalled1": 42,
-    "promiseSingleSync": Object {
+    "promiseSingleSync": {
       "type": "promise",
       "value": undefined,
     },
     "promiseSingleSyncCalled1": true,
-    "promiseSingleSyncWithArg": Object {
+    "promiseSingleSyncWithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseSingleSyncWithArgCalled1": 42,
-    "promiseSingleSyncWithArgNoReturn": Object {
+    "promiseSingleSyncWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseSingleSyncWithArgNoReturnCalled1": 42,
   },
-  "intercept": Object {
-    "callAsyncContextIntercepted": Object {
+  "intercept": {
+    "callAsyncContextIntercepted": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncContextInterceptedCall1": Array [
-      Object {
+    "callAsyncContextInterceptedCall1": [
+      {
         "number": 42,
       },
       1,
       2,
       3,
     ],
-    "callAsyncContextInterceptedCall2": Array [
+    "callAsyncContextInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "callAsyncContextInterceptedTap1": Object {
+    "callAsyncContextInterceptedTap1": {
       "number": 42,
     },
-    "callAsyncIntercepted": Object {
+    "callAsyncIntercepted": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncInterceptedCall1": Array [
+    "callAsyncInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedCall2": Array [
+    "callAsyncInterceptedCall2": [
       1,
       2,
       3,
     ],
     "callAsyncInterceptedDone1": true,
     "callAsyncInterceptedDone2": true,
-    "callAsyncInterceptedTap1": Object {
+    "callAsyncInterceptedTap1": {
       "fn": 2,
       "name": "promise",
       "type": "promise",
     },
-    "callAsyncInterceptedTap2": Object {
+    "callAsyncInterceptedTap2": {
       "fn": 3,
       "name": "sync",
       "type": "sync",
     },
-    "callAsyncUnusedContextIntercepted": Object {
+    "callAsyncUnusedContextIntercepted": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncUnusedContextInterceptedCall1": Array [
+    "callAsyncUnusedContextInterceptedCall1": [
       undefined,
       1,
       2,
       3,
     ],
-    "callAsyncUnusedContextInterceptedCall2": Array [
+    "callAsyncUnusedContextInterceptedCall2": [
       1,
       2,
       3,
     ],
     "callAsyncUnusedContextInterceptedTap1": undefined,
-    "promiseContextIntercepted": Object {
+    "promiseContextIntercepted": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseContextInterceptedCall1": Array [
-      Object {
+    "promiseContextInterceptedCall1": [
+      {
         "number": 42,
       },
       1,
       2,
       3,
     ],
-    "promiseContextInterceptedCall2": Array [
+    "promiseContextInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "promiseContextInterceptedTap1": Object {
+    "promiseContextInterceptedTap1": {
       "number": 42,
     },
-    "promiseIntercepted": Object {
+    "promiseIntercepted": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseInterceptedCall1": Array [
+    "promiseInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedCall2": Array [
+    "promiseInterceptedCall2": [
       1,
       2,
       3,
     ],
     "promiseInterceptedDone1": true,
     "promiseInterceptedDone2": true,
-    "promiseInterceptedTap1": Object {
+    "promiseInterceptedTap1": {
       "fn": 2,
       "name": "promise",
       "type": "promise",
     },
-    "promiseInterceptedTap2": Object {
+    "promiseInterceptedTap2": {
       "fn": 3,
       "name": "sync",
       "type": "sync",
     },
-    "promiseUnusedContextIntercepted": Object {
+    "promiseUnusedContextIntercepted": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseUnusedContextInterceptedCall1": Array [
+    "promiseUnusedContextInterceptedCall1": [
       undefined,
       1,
       2,
       3,
     ],
-    "promiseUnusedContextInterceptedCall2": Array [
+    "promiseUnusedContextInterceptedCall2": [
       1,
       2,
       3,
     ],
     "promiseUnusedContextInterceptedTap1": undefined,
   },
-  "sync": Object {
-    "callAsyncIntercepted": Object {
+  "sync": {
+    "callAsyncIntercepted": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncInterceptedCall1": Array [
+    "callAsyncInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedCall2": Array [
+    "callAsyncInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedTap1": Object {
+    "callAsyncInterceptedTap1": {
       "fn": 2,
       "name": "sync2",
       "type": "sync",
     },
-    "callAsyncInterceptedTap2": Object {
+    "callAsyncInterceptedTap2": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "callAsyncMultipleSync": Object {
+    "callAsyncMultipleSync": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncCalled1": true,
     "callAsyncMultipleSyncCalled2": true,
-    "callAsyncMultipleSyncError": Object {
+    "callAsyncMultipleSyncError": {
       "error": "Error in sync2",
       "type": "async",
     },
     "callAsyncMultipleSyncErrorCalled1": true,
     "callAsyncMultipleSyncErrorCalled2": true,
-    "callAsyncMultipleSyncWithArg": Object {
+    "callAsyncMultipleSyncWithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgCalled1": 42,
     "callAsyncMultipleSyncWithArgCalled2": 42,
-    "callAsyncMultipleSyncWithArgFirstReturn": Object {
+    "callAsyncMultipleSyncWithArgFirstReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgFirstReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgFirstReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgLastReturn": Object {
+    "callAsyncMultipleSyncWithArgLastReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgLastReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgLastReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgNoReturn": Object {
+    "callAsyncMultipleSyncWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgNoReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgNoReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgs": Object {
+    "callAsyncMultipleSyncWithArgs": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncMultipleSyncWithArgsCalled1": Array [
+    "callAsyncMultipleSyncWithArgsCalled1": [
       42,
       43,
       44,
     ],
-    "callAsyncMultipleSyncWithArgsCalled2": Array [
+    "callAsyncMultipleSyncWithArgsCalled2": [
       42,
       43,
       44,
     ],
-    "callAsyncNone": Object {
+    "callAsyncNone": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncNoneWithArg": Object {
+    "callAsyncNoneWithArg": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncSingleSync": Object {
+    "callAsyncSingleSync": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSingleSyncCalled": true,
-    "callAsyncSingleSyncWithArg": Object {
+    "callAsyncSingleSyncWithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSingleSyncWithArgCalled": 42,
-    "promiseIntercepted": Object {
+    "promiseIntercepted": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseInterceptedCall1": Array [
+    "promiseInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedCall2": Array [
+    "promiseInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedTap1": Object {
+    "promiseInterceptedTap1": {
       "fn": 2,
       "name": "sync2",
       "type": "sync",
     },
-    "promiseInterceptedTap2": Object {
+    "promiseInterceptedTap2": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "promiseMultipleSync": Object {
+    "promiseMultipleSync": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncCalled1": true,
     "promiseMultipleSyncCalled2": true,
-    "promiseMultipleSyncError": Object {
+    "promiseMultipleSyncError": {
       "error": "Error in sync2",
       "type": "promise",
     },
     "promiseMultipleSyncErrorCalled1": true,
     "promiseMultipleSyncErrorCalled2": true,
-    "promiseMultipleSyncWithArg": Object {
+    "promiseMultipleSyncWithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgCalled1": 42,
     "promiseMultipleSyncWithArgCalled2": 42,
-    "promiseMultipleSyncWithArgFirstReturn": Object {
+    "promiseMultipleSyncWithArgFirstReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgFirstReturnCalled1": 42,
     "promiseMultipleSyncWithArgFirstReturnCalled2": 42,
-    "promiseMultipleSyncWithArgLastReturn": Object {
+    "promiseMultipleSyncWithArgLastReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgLastReturnCalled1": 42,
     "promiseMultipleSyncWithArgLastReturnCalled2": 42,
-    "promiseMultipleSyncWithArgNoReturn": Object {
+    "promiseMultipleSyncWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgNoReturnCalled1": 42,
     "promiseMultipleSyncWithArgNoReturnCalled2": 42,
-    "promiseMultipleSyncWithArgs": Object {
+    "promiseMultipleSyncWithArgs": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseMultipleSyncWithArgsCalled1": Array [
+    "promiseMultipleSyncWithArgsCalled1": [
       42,
       43,
       44,
     ],
-    "promiseMultipleSyncWithArgsCalled2": Array [
+    "promiseMultipleSyncWithArgsCalled2": [
       42,
       43,
       44,
     ],
-    "promiseNone": Object {
+    "promiseNone": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseNoneWithArg": Object {
+    "promiseNoneWithArg": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseSingleSync": Object {
+    "promiseSingleSync": {
       "type": "promise",
       "value": undefined,
     },
     "promiseSingleSyncCalled": true,
-    "promiseSingleSyncWithArg": Object {
+    "promiseSingleSyncWithArg": {
       "type": "promise",
       "value": undefined,
     },
--- a/lib/__tests__/__snapshots__/AsyncSeriesHooks.js.snap
+++ b/lib/__tests__/__snapshots__/AsyncSeriesHooks.js.snap
@@ -1,692 +1,692 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`AsyncSeriesBailHook should have to correct behavior 1`] = `
-Object {
-  "async": Object {
-    "callAsyncMultipleAsyncEarlyError": Object {
+{
+  "async": {
+    "callAsyncMultipleAsyncEarlyError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultipleAsyncEarlyErrorCalled1": true,
-    "callAsyncMultipleAsyncError": Object {
+    "callAsyncMultipleAsyncError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultipleAsyncErrorCalled1": true,
-    "callAsyncMultipleAsyncLateError": Object {
+    "callAsyncMultipleAsyncLateError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultipleAsyncLateErrorCalled1": true,
-    "callAsyncMultipleAsyncLateErrorEarlyResult1": Object {
+    "callAsyncMultipleAsyncLateErrorEarlyResult1": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultipleAsyncLateErrorEarlyResult1Called1": true,
-    "callAsyncMultipleAsyncLateErrorEarlyResult2": Object {
+    "callAsyncMultipleAsyncLateErrorEarlyResult2": {
       "type": "async",
       "value": 42,
     },
     "callAsyncMultipleAsyncLateErrorEarlyResult2Called1": true,
-    "callAsyncMultipleAsyncWithArg": Object {
+    "callAsyncMultipleAsyncWithArg": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultipleAsyncWithArgCalled1": 42,
-    "callAsyncMultipleAsyncWithArgFirstReturn": Object {
+    "callAsyncMultipleAsyncWithArgFirstReturn": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultipleAsyncWithArgFirstReturnCalled1": 42,
-    "callAsyncMultipleAsyncWithArgLastReturn": Object {
+    "callAsyncMultipleAsyncWithArgLastReturn": {
       "type": "async",
       "value": 44,
     },
     "callAsyncMultipleAsyncWithArgLastReturnCalled1": 42,
     "callAsyncMultipleAsyncWithArgLastReturnCalled2": 42,
-    "callAsyncMultipleAsyncWithArgNoReturn": Object {
+    "callAsyncMultipleAsyncWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleAsyncWithArgNoReturnCalled1": 42,
     "callAsyncMultipleAsyncWithArgNoReturnCalled2": 42,
-    "callAsyncMultipleMixed1WithArg": Object {
+    "callAsyncMultipleMixed1WithArg": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultipleMixed1WithArgCalled1": 42,
-    "callAsyncMultipleMixed2WithArg": Object {
+    "callAsyncMultipleMixed2WithArg": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultipleMixed2WithArgCalled1": 42,
-    "callAsyncMultipleMixed3WithArg": Object {
+    "callAsyncMultipleMixed3WithArg": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultipleMixed3WithArgCalled1": 42,
-    "callAsyncMultipleMixedError1WithArg": Object {
+    "callAsyncMultipleMixedError1WithArg": {
       "type": "async",
       "value": 42,
     },
     "callAsyncMultipleMixedError1WithArgCalled1": 42,
-    "callAsyncMultipleMixedError2WithArg": Object {
+    "callAsyncMultipleMixedError2WithArg": {
       "type": "async",
       "value": 42,
     },
     "callAsyncMultipleMixedError2WithArgCalled1": 42,
-    "callAsyncMultipleMixedError3WithArg": Object {
+    "callAsyncMultipleMixedError3WithArg": {
       "error": "Error in async",
       "type": "async",
     },
     "callAsyncMultipleMixedError3WithArgCalled1": 42,
-    "callAsyncMultipleMixedLateError": Object {
+    "callAsyncMultipleMixedLateError": {
       "error": "Error in async",
       "type": "async",
     },
     "callAsyncMultipleMixedLateErrorCalled1": true,
-    "callAsyncMultiplePromiseEarlyError": Object {
+    "callAsyncMultiplePromiseEarlyError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultiplePromiseEarlyErrorCalled1": true,
-    "callAsyncMultiplePromiseError": Object {
+    "callAsyncMultiplePromiseError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultiplePromiseErrorCalled1": true,
-    "callAsyncMultiplePromiseLateError": Object {
+    "callAsyncMultiplePromiseLateError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultiplePromiseLateErrorCalled1": true,
-    "callAsyncMultiplePromiseWithArg": Object {
+    "callAsyncMultiplePromiseWithArg": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultiplePromiseWithArgCalled1": 42,
-    "callAsyncMultiplePromiseWithArgFirstReturn": Object {
+    "callAsyncMultiplePromiseWithArgFirstReturn": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultiplePromiseWithArgFirstReturnCalled1": 42,
-    "callAsyncMultiplePromiseWithArgLastReturn": Object {
+    "callAsyncMultiplePromiseWithArgLastReturn": {
       "type": "async",
       "value": 44,
     },
     "callAsyncMultiplePromiseWithArgLastReturnCalled1": 42,
     "callAsyncMultiplePromiseWithArgLastReturnCalled2": 42,
-    "callAsyncMultiplePromiseWithArgNoReturn": Object {
+    "callAsyncMultiplePromiseWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultiplePromiseWithArgNoReturnCalled1": 42,
     "callAsyncMultiplePromiseWithArgNoReturnCalled2": 42,
-    "callAsyncMultipleSync": Object {
+    "callAsyncMultipleSync": {
       "type": "async",
       "value": 42,
     },
     "callAsyncMultipleSyncCalled1": true,
-    "callAsyncMultipleSyncError": Object {
+    "callAsyncMultipleSyncError": {
       "error": "Error in sync2",
       "type": "async",
     },
     "callAsyncMultipleSyncErrorCalled1": true,
-    "callAsyncMultipleSyncLastReturn": Object {
+    "callAsyncMultipleSyncLastReturn": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultipleSyncLastReturnCalled1": true,
     "callAsyncMultipleSyncLastReturnCalled2": true,
-    "callAsyncMultipleSyncNoReturn": Object {
+    "callAsyncMultipleSyncNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncNoReturnCalled1": true,
     "callAsyncMultipleSyncNoReturnCalled2": true,
-    "callAsyncMultipleSyncWithArg": Object {
+    "callAsyncMultipleSyncWithArg": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultipleSyncWithArgCalled1": 42,
-    "callAsyncMultipleSyncWithArgFirstReturn": Object {
+    "callAsyncMultipleSyncWithArgFirstReturn": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultipleSyncWithArgFirstReturnCalled1": 42,
-    "callAsyncMultipleSyncWithArgLastReturn": Object {
+    "callAsyncMultipleSyncWithArgLastReturn": {
       "type": "async",
       "value": 44,
     },
     "callAsyncMultipleSyncWithArgLastReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgLastReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgNoReturn": Object {
+    "callAsyncMultipleSyncWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgNoReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgNoReturnCalled2": 42,
-    "callAsyncNone": Object {
+    "callAsyncNone": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncNoneWithArg": Object {
+    "callAsyncNoneWithArg": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncSingleAsyncWithArg": Object {
+    "callAsyncSingleAsyncWithArg": {
       "type": "async",
       "value": 42,
     },
     "callAsyncSingleAsyncWithArgCalled1": 42,
-    "callAsyncSinglePromiseWithArg": Object {
+    "callAsyncSinglePromiseWithArg": {
       "type": "async",
       "value": 43,
     },
     "callAsyncSinglePromiseWithArgCalled1": 42,
-    "callAsyncSingleSync": Object {
+    "callAsyncSingleSync": {
       "type": "async",
       "value": 42,
     },
     "callAsyncSingleSyncCalled1": true,
-    "callAsyncSingleSyncWithArg": Object {
+    "callAsyncSingleSyncWithArg": {
       "type": "async",
       "value": 43,
     },
     "callAsyncSingleSyncWithArgCalled1": 42,
-    "callAsyncSingleSyncWithArgNoReturn": Object {
+    "callAsyncSingleSyncWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSingleSyncWithArgNoReturnCalled1": 42,
-    "promiseMultipleAsyncEarlyError": Object {
+    "promiseMultipleAsyncEarlyError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultipleAsyncEarlyErrorCalled1": true,
-    "promiseMultipleAsyncError": Object {
+    "promiseMultipleAsyncError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultipleAsyncErrorCalled1": true,
-    "promiseMultipleAsyncLateError": Object {
+    "promiseMultipleAsyncLateError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultipleAsyncLateErrorCalled1": true,
-    "promiseMultipleAsyncLateErrorEarlyResult1": Object {
+    "promiseMultipleAsyncLateErrorEarlyResult1": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultipleAsyncLateErrorEarlyResult1Called1": true,
-    "promiseMultipleAsyncLateErrorEarlyResult2": Object {
+    "promiseMultipleAsyncLateErrorEarlyResult2": {
       "type": "promise",
       "value": 42,
     },
     "promiseMultipleAsyncLateErrorEarlyResult2Called1": true,
-    "promiseMultipleAsyncWithArg": Object {
+    "promiseMultipleAsyncWithArg": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultipleAsyncWithArgCalled1": 42,
-    "promiseMultipleAsyncWithArgFirstReturn": Object {
+    "promiseMultipleAsyncWithArgFirstReturn": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultipleAsyncWithArgFirstReturnCalled1": 42,
-    "promiseMultipleAsyncWithArgLastReturn": Object {
+    "promiseMultipleAsyncWithArgLastReturn": {
       "type": "promise",
       "value": 44,
     },
     "promiseMultipleAsyncWithArgLastReturnCalled1": 42,
     "promiseMultipleAsyncWithArgLastReturnCalled2": 42,
-    "promiseMultipleAsyncWithArgNoReturn": Object {
+    "promiseMultipleAsyncWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleAsyncWithArgNoReturnCalled1": 42,
     "promiseMultipleAsyncWithArgNoReturnCalled2": 42,
-    "promiseMultipleMixed1WithArg": Object {
+    "promiseMultipleMixed1WithArg": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultipleMixed1WithArgCalled1": 42,
-    "promiseMultipleMixed2WithArg": Object {
+    "promiseMultipleMixed2WithArg": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultipleMixed2WithArgCalled1": 42,
-    "promiseMultipleMixed3WithArg": Object {
+    "promiseMultipleMixed3WithArg": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultipleMixed3WithArgCalled1": 42,
-    "promiseMultipleMixedError1WithArg": Object {
+    "promiseMultipleMixedError1WithArg": {
       "type": "promise",
       "value": 42,
     },
     "promiseMultipleMixedError1WithArgCalled1": 42,
-    "promiseMultipleMixedError2WithArg": Object {
+    "promiseMultipleMixedError2WithArg": {
       "type": "promise",
       "value": 42,
     },
     "promiseMultipleMixedError2WithArgCalled1": 42,
-    "promiseMultipleMixedError3WithArg": Object {
+    "promiseMultipleMixedError3WithArg": {
       "error": "Error in async",
       "type": "promise",
     },
     "promiseMultipleMixedError3WithArgCalled1": 42,
-    "promiseMultipleMixedLateError": Object {
+    "promiseMultipleMixedLateError": {
       "error": "Error in async",
       "type": "promise",
     },
     "promiseMultipleMixedLateErrorCalled1": true,
-    "promiseMultiplePromiseEarlyError": Object {
+    "promiseMultiplePromiseEarlyError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultiplePromiseEarlyErrorCalled1": true,
-    "promiseMultiplePromiseError": Object {
+    "promiseMultiplePromiseError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultiplePromiseErrorCalled1": true,
-    "promiseMultiplePromiseLateError": Object {
+    "promiseMultiplePromiseLateError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultiplePromiseLateErrorCalled1": true,
-    "promiseMultiplePromiseWithArg": Object {
+    "promiseMultiplePromiseWithArg": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultiplePromiseWithArgCalled1": 42,
-    "promiseMultiplePromiseWithArgFirstReturn": Object {
+    "promiseMultiplePromiseWithArgFirstReturn": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultiplePromiseWithArgFirstReturnCalled1": 42,
-    "promiseMultiplePromiseWithArgLastReturn": Object {
+    "promiseMultiplePromiseWithArgLastReturn": {
       "type": "promise",
       "value": 44,
     },
     "promiseMultiplePromiseWithArgLastReturnCalled1": 42,
     "promiseMultiplePromiseWithArgLastReturnCalled2": 42,
-    "promiseMultiplePromiseWithArgNoReturn": Object {
+    "promiseMultiplePromiseWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultiplePromiseWithArgNoReturnCalled1": 42,
     "promiseMultiplePromiseWithArgNoReturnCalled2": 42,
-    "promiseMultipleSync": Object {
+    "promiseMultipleSync": {
       "type": "promise",
       "value": 42,
     },
     "promiseMultipleSyncCalled1": true,
-    "promiseMultipleSyncError": Object {
+    "promiseMultipleSyncError": {
       "error": "Error in sync2",
       "type": "promise",
     },
     "promiseMultipleSyncErrorCalled1": true,
-    "promiseMultipleSyncLastReturn": Object {
+    "promiseMultipleSyncLastReturn": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultipleSyncLastReturnCalled1": true,
     "promiseMultipleSyncLastReturnCalled2": true,
-    "promiseMultipleSyncNoReturn": Object {
+    "promiseMultipleSyncNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncNoReturnCalled1": true,
     "promiseMultipleSyncNoReturnCalled2": true,
-    "promiseMultipleSyncWithArg": Object {
+    "promiseMultipleSyncWithArg": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultipleSyncWithArgCalled1": 42,
-    "promiseMultipleSyncWithArgFirstReturn": Object {
+    "promiseMultipleSyncWithArgFirstReturn": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultipleSyncWithArgFirstReturnCalled1": 42,
-    "promiseMultipleSyncWithArgLastReturn": Object {
+    "promiseMultipleSyncWithArgLastReturn": {
       "type": "promise",
       "value": 44,
     },
     "promiseMultipleSyncWithArgLastReturnCalled1": 42,
     "promiseMultipleSyncWithArgLastReturnCalled2": 42,
-    "promiseMultipleSyncWithArgNoReturn": Object {
+    "promiseMultipleSyncWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgNoReturnCalled1": 42,
     "promiseMultipleSyncWithArgNoReturnCalled2": 42,
-    "promiseNone": Object {
+    "promiseNone": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseNoneWithArg": Object {
+    "promiseNoneWithArg": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseSingleAsyncWithArg": Object {
+    "promiseSingleAsyncWithArg": {
       "type": "promise",
       "value": 42,
     },
     "promiseSingleAsyncWithArgCalled1": 42,
-    "promiseSinglePromiseWithArg": Object {
+    "promiseSinglePromiseWithArg": {
       "type": "promise",
       "value": 43,
     },
     "promiseSinglePromiseWithArgCalled1": 42,
-    "promiseSingleSync": Object {
+    "promiseSingleSync": {
       "type": "promise",
       "value": 42,
     },
     "promiseSingleSyncCalled1": true,
-    "promiseSingleSyncWithArg": Object {
+    "promiseSingleSyncWithArg": {
       "type": "promise",
       "value": 43,
     },
     "promiseSingleSyncWithArgCalled1": 42,
-    "promiseSingleSyncWithArgNoReturn": Object {
+    "promiseSingleSyncWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseSingleSyncWithArgNoReturnCalled1": 42,
   },
-  "intercept": Object {
-    "callAsyncContextIntercepted": Object {
+  "intercept": {
+    "callAsyncContextIntercepted": {
       "type": "async",
       "value": 48,
     },
-    "callAsyncContextInterceptedCall1": Array [
-      Object {
+    "callAsyncContextInterceptedCall1": [
+      {
         "number": 42,
       },
       1,
       2,
       3,
     ],
-    "callAsyncContextInterceptedCall2": Array [
+    "callAsyncContextInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "callAsyncContextInterceptedTap1": Object {
+    "callAsyncContextInterceptedTap1": {
       "number": 42,
     },
-    "callAsyncIntercepted": Object {
+    "callAsyncIntercepted": {
       "type": "async",
       "value": 6,
     },
-    "callAsyncInterceptedCall1": Array [
+    "callAsyncInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedCall2": Array [
+    "callAsyncInterceptedCall2": [
       1,
       2,
       3,
     ],
     "callAsyncInterceptedResult1": 6,
     "callAsyncInterceptedResult2": 6,
-    "callAsyncInterceptedTap1": Object {
+    "callAsyncInterceptedTap1": {
       "fn": 3,
       "name": "sync",
       "type": "sync",
     },
-    "callAsyncInterceptedTap2": Object {
+    "callAsyncInterceptedTap2": {
       "fn": 3,
       "name": "sync",
       "type": "sync",
     },
-    "callAsyncUnusedContextIntercepted": Object {
+    "callAsyncUnusedContextIntercepted": {
       "type": "async",
       "value": 6,
     },
-    "callAsyncUnusedContextInterceptedCall1": Array [
+    "callAsyncUnusedContextInterceptedCall1": [
       undefined,
       1,
       2,
       3,
     ],
-    "callAsyncUnusedContextInterceptedCall2": Array [
+    "callAsyncUnusedContextInterceptedCall2": [
       1,
       2,
       3,
     ],
     "callAsyncUnusedContextInterceptedTap1": undefined,
-    "promiseContextIntercepted": Object {
+    "promiseContextIntercepted": {
       "type": "promise",
       "value": 48,
     },
-    "promiseContextInterceptedCall1": Array [
-      Object {
+    "promiseContextInterceptedCall1": [
+      {
         "number": 42,
       },
       1,
       2,
       3,
     ],
-    "promiseContextInterceptedCall2": Array [
+    "promiseContextInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "promiseContextInterceptedTap1": Object {
+    "promiseContextInterceptedTap1": {
       "number": 42,
     },
-    "promiseIntercepted": Object {
+    "promiseIntercepted": {
       "type": "promise",
       "value": 6,
     },
-    "promiseInterceptedCall1": Array [
+    "promiseInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedCall2": Array [
+    "promiseInterceptedCall2": [
       1,
       2,
       3,
     ],
     "promiseInterceptedResult1": 6,
     "promiseInterceptedResult2": 6,
-    "promiseInterceptedTap1": Object {
+    "promiseInterceptedTap1": {
       "fn": 3,
       "name": "sync",
       "type": "sync",
     },
-    "promiseInterceptedTap2": Object {
+    "promiseInterceptedTap2": {
       "fn": 3,
       "name": "sync",
       "type": "sync",
     },
-    "promiseUnusedContextIntercepted": Object {
+    "promiseUnusedContextIntercepted": {
       "type": "promise",
       "value": 6,
     },
-    "promiseUnusedContextInterceptedCall1": Array [
+    "promiseUnusedContextInterceptedCall1": [
       undefined,
       1,
       2,
       3,
     ],
-    "promiseUnusedContextInterceptedCall2": Array [
+    "promiseUnusedContextInterceptedCall2": [
       1,
       2,
       3,
     ],
     "promiseUnusedContextInterceptedTap1": undefined,
   },
-  "sync": Object {
-    "callAsyncIntercepted": Object {
+  "sync": {
+    "callAsyncIntercepted": {
       "type": "async",
       "value": 6,
     },
-    "callAsyncInterceptedCall1": Array [
+    "callAsyncInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedCall2": Array [
+    "callAsyncInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedTap1": Object {
+    "callAsyncInterceptedTap1": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "callAsyncInterceptedTap2": Object {
+    "callAsyncInterceptedTap2": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "callAsyncMultipleSync": Object {
+    "callAsyncMultipleSync": {
       "type": "async",
       "value": 42,
     },
     "callAsyncMultipleSyncCalled1": true,
-    "callAsyncMultipleSyncError": Object {
+    "callAsyncMultipleSyncError": {
       "error": "Error in sync2",
       "type": "async",
     },
     "callAsyncMultipleSyncErrorCalled1": true,
     "callAsyncMultipleSyncErrorCalled2": true,
-    "callAsyncMultipleSyncWithArg": Object {
+    "callAsyncMultipleSyncWithArg": {
       "type": "async",
       "value": 84,
     },
     "callAsyncMultipleSyncWithArgCalled1": 42,
-    "callAsyncMultipleSyncWithArgFirstReturn": Object {
+    "callAsyncMultipleSyncWithArgFirstReturn": {
       "type": "async",
       "value": 84,
     },
     "callAsyncMultipleSyncWithArgFirstReturnCalled1": 42,
-    "callAsyncMultipleSyncWithArgLastReturn": Object {
+    "callAsyncMultipleSyncWithArgLastReturn": {
       "type": "async",
       "value": 85,
     },
     "callAsyncMultipleSyncWithArgLastReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgLastReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgNoReturn": Object {
+    "callAsyncMultipleSyncWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgNoReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgNoReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgs": Object {
+    "callAsyncMultipleSyncWithArgs": {
       "type": "async",
       "value": 129,
     },
-    "callAsyncMultipleSyncWithArgsCalled1": Array [
+    "callAsyncMultipleSyncWithArgsCalled1": [
       42,
       43,
       44,
     ],
-    "callAsyncNone": Object {
+    "callAsyncNone": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncNoneWithArg": Object {
+    "callAsyncNoneWithArg": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncSingleSync": Object {
+    "callAsyncSingleSync": {
       "type": "async",
       "value": 42,
     },
     "callAsyncSingleSyncCalled": true,
-    "callAsyncSingleSyncWithArg": Object {
+    "callAsyncSingleSyncWithArg": {
       "type": "async",
       "value": 42,
     },
     "callAsyncSingleSyncWithArgCalled": 42,
-    "promiseIntercepted": Object {
+    "promiseIntercepted": {
       "type": "promise",
       "value": 6,
     },
-    "promiseInterceptedCall1": Array [
+    "promiseInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedCall2": Array [
+    "promiseInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedTap1": Object {
+    "promiseInterceptedTap1": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "promiseInterceptedTap2": Object {
+    "promiseInterceptedTap2": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "promiseMultipleSync": Object {
+    "promiseMultipleSync": {
       "type": "promise",
       "value": 42,
     },
     "promiseMultipleSyncCalled1": true,
-    "promiseMultipleSyncError": Object {
+    "promiseMultipleSyncError": {
       "error": "Error in sync2",
       "type": "promise",
     },
     "promiseMultipleSyncErrorCalled1": true,
     "promiseMultipleSyncErrorCalled2": true,
-    "promiseMultipleSyncWithArg": Object {
+    "promiseMultipleSyncWithArg": {
       "type": "promise",
       "value": 84,
     },
     "promiseMultipleSyncWithArgCalled1": 42,
-    "promiseMultipleSyncWithArgFirstReturn": Object {
+    "promiseMultipleSyncWithArgFirstReturn": {
       "type": "promise",
       "value": 84,
     },
     "promiseMultipleSyncWithArgFirstReturnCalled1": 42,
-    "promiseMultipleSyncWithArgLastReturn": Object {
+    "promiseMultipleSyncWithArgLastReturn": {
       "type": "promise",
       "value": 85,
     },
     "promiseMultipleSyncWithArgLastReturnCalled1": 42,
     "promiseMultipleSyncWithArgLastReturnCalled2": 42,
-    "promiseMultipleSyncWithArgNoReturn": Object {
+    "promiseMultipleSyncWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgNoReturnCalled1": 42,
     "promiseMultipleSyncWithArgNoReturnCalled2": 42,
-    "promiseMultipleSyncWithArgs": Object {
+    "promiseMultipleSyncWithArgs": {
       "type": "promise",
       "value": 129,
     },
-    "promiseMultipleSyncWithArgsCalled1": Array [
+    "promiseMultipleSyncWithArgsCalled1": [
       42,
       43,
       44,
     ],
-    "promiseNone": Object {
+    "promiseNone": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseNoneWithArg": Object {
+    "promiseNoneWithArg": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseSingleSync": Object {
+    "promiseSingleSync": {
       "type": "promise",
       "value": 42,
     },
     "promiseSingleSyncCalled": true,
-    "promiseSingleSyncWithArg": Object {
+    "promiseSingleSyncWithArg": {
       "type": "promise",
       "value": 42,
     },
@@ -696,738 +696,738 @@
 `;
 
 exports[`AsyncSeriesHook should have to correct behavior 1`] = `
-Object {
-  "async": Object {
-    "callAsyncMultipleAsyncEarlyError": Object {
+{
+  "async": {
+    "callAsyncMultipleAsyncEarlyError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultipleAsyncEarlyErrorCalled1": true,
-    "callAsyncMultipleAsyncError": Object {
+    "callAsyncMultipleAsyncError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultipleAsyncErrorCalled1": true,
-    "callAsyncMultipleAsyncLateError": Object {
+    "callAsyncMultipleAsyncLateError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultipleAsyncLateErrorCalled1": true,
-    "callAsyncMultipleAsyncLateErrorEarlyResult1": Object {
+    "callAsyncMultipleAsyncLateErrorEarlyResult1": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultipleAsyncLateErrorEarlyResult1Called1": true,
-    "callAsyncMultipleAsyncLateErrorEarlyResult2": Object {
+    "callAsyncMultipleAsyncLateErrorEarlyResult2": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultipleAsyncLateErrorEarlyResult2Called1": true,
-    "callAsyncMultipleAsyncWithArg": Object {
+    "callAsyncMultipleAsyncWithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleAsyncWithArgCalled1": 42,
     "callAsyncMultipleAsyncWithArgCalled2": 42,
-    "callAsyncMultipleAsyncWithArgFirstReturn": Object {
+    "callAsyncMultipleAsyncWithArgFirstReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleAsyncWithArgFirstReturnCalled1": 42,
     "callAsyncMultipleAsyncWithArgFirstReturnCalled2": 42,
-    "callAsyncMultipleAsyncWithArgLastReturn": Object {
+    "callAsyncMultipleAsyncWithArgLastReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleAsyncWithArgLastReturnCalled1": 42,
     "callAsyncMultipleAsyncWithArgLastReturnCalled2": 42,
-    "callAsyncMultipleAsyncWithArgNoReturn": Object {
+    "callAsyncMultipleAsyncWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleAsyncWithArgNoReturnCalled1": 42,
     "callAsyncMultipleAsyncWithArgNoReturnCalled2": 42,
-    "callAsyncMultipleMixed1WithArg": Object {
+    "callAsyncMultipleMixed1WithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleMixed1WithArgCalled1": 42,
     "callAsyncMultipleMixed1WithArgCalled2": 42,
     "callAsyncMultipleMixed1WithArgCalled3": 42,
-    "callAsyncMultipleMixed2WithArg": Object {
+    "callAsyncMultipleMixed2WithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleMixed2WithArgCalled1": 42,
     "callAsyncMultipleMixed2WithArgCalled2": 42,
-    "callAsyncMultipleMixed3WithArg": Object {
+    "callAsyncMultipleMixed3WithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleMixed3WithArgCalled1": 42,
     "callAsyncMultipleMixed3WithArgCalled2": 42,
     "callAsyncMultipleMixed3WithArgCalled3": 42,
-    "callAsyncMultipleMixedError1WithArg": Object {
+    "callAsyncMultipleMixedError1WithArg": {
       "error": "Error in sync",
       "type": "async",
     },
     "callAsyncMultipleMixedError1WithArgCalled1": 42,
     "callAsyncMultipleMixedError1WithArgCalled2": 42,
     "callAsyncMultipleMixedError1WithArgCalled3": 42,
-    "callAsyncMultipleMixedError2WithArg": Object {
+    "callAsyncMultipleMixedError2WithArg": {
       "error": "Error in promise",
       "type": "async",
     },
     "callAsyncMultipleMixedError2WithArgCalled1": 42,
     "callAsyncMultipleMixedError2WithArgCalled2": 42,
-    "callAsyncMultipleMixedError3WithArg": Object {
+    "callAsyncMultipleMixedError3WithArg": {
       "error": "Error in async",
       "type": "async",
     },
     "callAsyncMultipleMixedError3WithArgCalled1": 42,
-    "callAsyncMultipleMixedLateError": Object {
+    "callAsyncMultipleMixedLateError": {
       "error": "Error in async",
       "type": "async",
     },
     "callAsyncMultipleMixedLateErrorCalled1": true,
-    "callAsyncMultiplePromiseEarlyError": Object {
+    "callAsyncMultiplePromiseEarlyError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultiplePromiseEarlyErrorCalled1": true,
-    "callAsyncMultiplePromiseError": Object {
+    "callAsyncMultiplePromiseError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultiplePromiseErrorCalled1": true,
-    "callAsyncMultiplePromiseLateError": Object {
+    "callAsyncMultiplePromiseLateError": {
       "error": "Error in async2",
       "type": "async",
     },
     "callAsyncMultiplePromiseLateErrorCalled1": true,
-    "callAsyncMultiplePromiseWithArg": Object {
+    "callAsyncMultiplePromiseWithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultiplePromiseWithArgCalled1": 42,
     "callAsyncMultiplePromiseWithArgCalled2": 42,
-    "callAsyncMultiplePromiseWithArgFirstReturn": Object {
+    "callAsyncMultiplePromiseWithArgFirstReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultiplePromiseWithArgFirstReturnCalled1": 42,
     "callAsyncMultiplePromiseWithArgFirstReturnCalled2": 42,
-    "callAsyncMultiplePromiseWithArgLastReturn": Object {
+    "callAsyncMultiplePromiseWithArgLastReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultiplePromiseWithArgLastReturnCalled1": 42,
     "callAsyncMultiplePromiseWithArgLastReturnCalled2": 42,
-    "callAsyncMultiplePromiseWithArgNoReturn": Object {
+    "callAsyncMultiplePromiseWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultiplePromiseWithArgNoReturnCalled1": 42,
     "callAsyncMultiplePromiseWithArgNoReturnCalled2": 42,
-    "callAsyncMultipleSync": Object {
+    "callAsyncMultipleSync": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncCalled1": true,
     "callAsyncMultipleSyncCalled2": true,
-    "callAsyncMultipleSyncError": Object {
+    "callAsyncMultipleSyncError": {
       "error": "Error in sync2",
       "type": "async",
     },
     "callAsyncMultipleSyncErrorCalled1": true,
-    "callAsyncMultipleSyncLastReturn": Object {
+    "callAsyncMultipleSyncLastReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncLastReturnCalled1": true,
     "callAsyncMultipleSyncLastReturnCalled2": true,
-    "callAsyncMultipleSyncNoReturn": Object {
+    "callAsyncMultipleSyncNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncNoReturnCalled1": true,
     "callAsyncMultipleSyncNoReturnCalled2": true,
-    "callAsyncMultipleSyncWithArg": Object {
+    "callAsyncMultipleSyncWithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgCalled1": 42,
     "callAsyncMultipleSyncWithArgCalled2": 42,
-    "callAsyncMultipleSyncWithArgFirstReturn": Object {
+    "callAsyncMultipleSyncWithArgFirstReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgFirstReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgFirstReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgLastReturn": Object {
+    "callAsyncMultipleSyncWithArgLastReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgLastReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgLastReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgNoReturn": Object {
+    "callAsyncMultipleSyncWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgNoReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgNoReturnCalled2": 42,
-    "callAsyncNone": Object {
+    "callAsyncNone": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncNoneWithArg": Object {
+    "callAsyncNoneWithArg": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncSingleAsyncWithArg": Object {
+    "callAsyncSingleAsyncWithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSingleAsyncWithArgCalled1": 42,
-    "callAsyncSinglePromiseWithArg": Object {
+    "callAsyncSinglePromiseWithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSinglePromiseWithArgCalled1": 42,
-    "callAsyncSingleSync": Object {
+    "callAsyncSingleSync": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSingleSyncCalled1": true,
-    "callAsyncSingleSyncWithArg": Object {
+    "callAsyncSingleSyncWithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSingleSyncWithArgCalled1": 42,
-    "callAsyncSingleSyncWithArgNoReturn": Object {
+    "callAsyncSingleSyncWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSingleSyncWithArgNoReturnCalled1": 42,
-    "promiseMultipleAsyncEarlyError": Object {
+    "promiseMultipleAsyncEarlyError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultipleAsyncEarlyErrorCalled1": true,
-    "promiseMultipleAsyncError": Object {
+    "promiseMultipleAsyncError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultipleAsyncErrorCalled1": true,
-    "promiseMultipleAsyncLateError": Object {
+    "promiseMultipleAsyncLateError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultipleAsyncLateErrorCalled1": true,
-    "promiseMultipleAsyncLateErrorEarlyResult1": Object {
+    "promiseMultipleAsyncLateErrorEarlyResult1": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultipleAsyncLateErrorEarlyResult1Called1": true,
-    "promiseMultipleAsyncLateErrorEarlyResult2": Object {
+    "promiseMultipleAsyncLateErrorEarlyResult2": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultipleAsyncLateErrorEarlyResult2Called1": true,
-    "promiseMultipleAsyncWithArg": Object {
+    "promiseMultipleAsyncWithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleAsyncWithArgCalled1": 42,
     "promiseMultipleAsyncWithArgCalled2": 42,
-    "promiseMultipleAsyncWithArgFirstReturn": Object {
+    "promiseMultipleAsyncWithArgFirstReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleAsyncWithArgFirstReturnCalled1": 42,
     "promiseMultipleAsyncWithArgFirstReturnCalled2": 42,
-    "promiseMultipleAsyncWithArgLastReturn": Object {
+    "promiseMultipleAsyncWithArgLastReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleAsyncWithArgLastReturnCalled1": 42,
     "promiseMultipleAsyncWithArgLastReturnCalled2": 42,
-    "promiseMultipleAsyncWithArgNoReturn": Object {
+    "promiseMultipleAsyncWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleAsyncWithArgNoReturnCalled1": 42,
     "promiseMultipleAsyncWithArgNoReturnCalled2": 42,
-    "promiseMultipleMixed1WithArg": Object {
+    "promiseMultipleMixed1WithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleMixed1WithArgCalled1": 42,
     "promiseMultipleMixed1WithArgCalled2": 42,
     "promiseMultipleMixed1WithArgCalled3": 42,
-    "promiseMultipleMixed2WithArg": Object {
+    "promiseMultipleMixed2WithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleMixed2WithArgCalled1": 42,
     "promiseMultipleMixed2WithArgCalled2": 42,
-    "promiseMultipleMixed3WithArg": Object {
+    "promiseMultipleMixed3WithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleMixed3WithArgCalled1": 42,
     "promiseMultipleMixed3WithArgCalled2": 42,
     "promiseMultipleMixed3WithArgCalled3": 42,
-    "promiseMultipleMixedError1WithArg": Object {
+    "promiseMultipleMixedError1WithArg": {
       "error": "Error in sync",
       "type": "promise",
     },
     "promiseMultipleMixedError1WithArgCalled1": 42,
     "promiseMultipleMixedError1WithArgCalled2": 42,
     "promiseMultipleMixedError1WithArgCalled3": 42,
-    "promiseMultipleMixedError2WithArg": Object {
+    "promiseMultipleMixedError2WithArg": {
       "error": "Error in promise",
       "type": "promise",
     },
     "promiseMultipleMixedError2WithArgCalled1": 42,
     "promiseMultipleMixedError2WithArgCalled2": 42,
-    "promiseMultipleMixedError3WithArg": Object {
+    "promiseMultipleMixedError3WithArg": {
       "error": "Error in async",
       "type": "promise",
     },
     "promiseMultipleMixedError3WithArgCalled1": 42,
-    "promiseMultipleMixedLateError": Object {
+    "promiseMultipleMixedLateError": {
       "error": "Error in async",
       "type": "promise",
     },
     "promiseMultipleMixedLateErrorCalled1": true,
-    "promiseMultiplePromiseEarlyError": Object {
+    "promiseMultiplePromiseEarlyError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultiplePromiseEarlyErrorCalled1": true,
-    "promiseMultiplePromiseError": Object {
+    "promiseMultiplePromiseError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultiplePromiseErrorCalled1": true,
-    "promiseMultiplePromiseLateError": Object {
+    "promiseMultiplePromiseLateError": {
       "error": "Error in async2",
       "type": "promise",
     },
     "promiseMultiplePromiseLateErrorCalled1": true,
-    "promiseMultiplePromiseWithArg": Object {
+    "promiseMultiplePromiseWithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultiplePromiseWithArgCalled1": 42,
     "promiseMultiplePromiseWithArgCalled2": 42,
-    "promiseMultiplePromiseWithArgFirstReturn": Object {
+    "promiseMultiplePromiseWithArgFirstReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultiplePromiseWithArgFirstReturnCalled1": 42,
     "promiseMultiplePromiseWithArgFirstReturnCalled2": 42,
-    "promiseMultiplePromiseWithArgLastReturn": Object {
+    "promiseMultiplePromiseWithArgLastReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultiplePromiseWithArgLastReturnCalled1": 42,
     "promiseMultiplePromiseWithArgLastReturnCalled2": 42,
-    "promiseMultiplePromiseWithArgNoReturn": Object {
+    "promiseMultiplePromiseWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultiplePromiseWithArgNoReturnCalled1": 42,
     "promiseMultiplePromiseWithArgNoReturnCalled2": 42,
-    "promiseMultipleSync": Object {
+    "promiseMultipleSync": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncCalled1": true,
     "promiseMultipleSyncCalled2": true,
-    "promiseMultipleSyncError": Object {
+    "promiseMultipleSyncError": {
       "error": "Error in sync2",
       "type": "promise",
     },
     "promiseMultipleSyncErrorCalled1": true,
-    "promiseMultipleSyncLastReturn": Object {
+    "promiseMultipleSyncLastReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncLastReturnCalled1": true,
     "promiseMultipleSyncLastReturnCalled2": true,
-    "promiseMultipleSyncNoReturn": Object {
+    "promiseMultipleSyncNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncNoReturnCalled1": true,
     "promiseMultipleSyncNoReturnCalled2": true,
-    "promiseMultipleSyncWithArg": Object {
+    "promiseMultipleSyncWithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgCalled1": 42,
     "promiseMultipleSyncWithArgCalled2": 42,
-    "promiseMultipleSyncWithArgFirstReturn": Object {
+    "promiseMultipleSyncWithArgFirstReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgFirstReturnCalled1": 42,
     "promiseMultipleSyncWithArgFirstReturnCalled2": 42,
-    "promiseMultipleSyncWithArgLastReturn": Object {
+    "promiseMultipleSyncWithArgLastReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgLastReturnCalled1": 42,
     "promiseMultipleSyncWithArgLastReturnCalled2": 42,
-    "promiseMultipleSyncWithArgNoReturn": Object {
+    "promiseMultipleSyncWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgNoReturnCalled1": 42,
     "promiseMultipleSyncWithArgNoReturnCalled2": 42,
-    "promiseNone": Object {
+    "promiseNone": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseNoneWithArg": Object {
+    "promiseNoneWithArg": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseSingleAsyncWithArg": Object {
+    "promiseSingleAsyncWithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseSingleAsyncWithArgCalled1": 42,
-    "promiseSinglePromiseWithArg": Object {
+    "promiseSinglePromiseWithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseSinglePromiseWithArgCalled1": 42,
-    "promiseSingleSync": Object {
+    "promiseSingleSync": {
       "type": "promise",
       "value": undefined,
     },
     "promiseSingleSyncCalled1": true,
-    "promiseSingleSyncWithArg": Object {
+    "promiseSingleSyncWithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseSingleSyncWithArgCalled1": 42,
-    "promiseSingleSyncWithArgNoReturn": Object {
+    "promiseSingleSyncWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseSingleSyncWithArgNoReturnCalled1": 42,
   },
-  "intercept": Object {
-    "callAsyncContextIntercepted": Object {
+  "intercept": {
+    "callAsyncContextIntercepted": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncContextInterceptedCall1": Array [
-      Object {
+    "callAsyncContextInterceptedCall1": [
+      {
         "number": 42,
       },
       1,
       2,
       3,
     ],
-    "callAsyncContextInterceptedCall2": Array [
+    "callAsyncContextInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "callAsyncContextInterceptedTap1": Object {
+    "callAsyncContextInterceptedTap1": {
       "number": 42,
     },
-    "callAsyncIntercepted": Object {
+    "callAsyncIntercepted": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncInterceptedCall1": Array [
+    "callAsyncInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedCall2": Array [
+    "callAsyncInterceptedCall2": [
       1,
       2,
       3,
     ],
     "callAsyncInterceptedDone1": true,
     "callAsyncInterceptedDone2": true,
-    "callAsyncInterceptedTap1": Object {
+    "callAsyncInterceptedTap1": {
       "fn": 2,
       "name": "promise",
       "type": "promise",
     },
-    "callAsyncInterceptedTap2": Object {
+    "callAsyncInterceptedTap2": {
       "fn": 3,
       "name": "sync",
       "type": "sync",
     },
-    "callAsyncUnusedContextIntercepted": Object {
+    "callAsyncUnusedContextIntercepted": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncUnusedContextInterceptedCall1": Array [
+    "callAsyncUnusedContextInterceptedCall1": [
       undefined,
       1,
       2,
       3,
     ],
-    "callAsyncUnusedContextInterceptedCall2": Array [
+    "callAsyncUnusedContextInterceptedCall2": [
       1,
       2,
       3,
     ],
     "callAsyncUnusedContextInterceptedTap1": undefined,
-    "promiseContextIntercepted": Object {
+    "promiseContextIntercepted": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseContextInterceptedCall1": Array [
-      Object {
+    "promiseContextInterceptedCall1": [
+      {
         "number": 42,
       },
       1,
       2,
       3,
     ],
-    "promiseContextInterceptedCall2": Array [
+    "promiseContextInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "promiseContextInterceptedTap1": Object {
+    "promiseContextInterceptedTap1": {
       "number": 42,
     },
-    "promiseIntercepted": Object {
+    "promiseIntercepted": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseInterceptedCall1": Array [
+    "promiseInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedCall2": Array [
+    "promiseInterceptedCall2": [
       1,
       2,
       3,
     ],
     "promiseInterceptedDone1": true,
     "promiseInterceptedDone2": true,
-    "promiseInterceptedTap1": Object {
+    "promiseInterceptedTap1": {
       "fn": 2,
       "name": "promise",
       "type": "promise",
     },
-    "promiseInterceptedTap2": Object {
+    "promiseInterceptedTap2": {
       "fn": 3,
       "name": "sync",
       "type": "sync",
     },
-    "promiseUnusedContextIntercepted": Object {
+    "promiseUnusedContextIntercepted": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseUnusedContextInterceptedCall1": Array [
+    "promiseUnusedContextInterceptedCall1": [
       undefined,
       1,
       2,
       3,
     ],
-    "promiseUnusedContextInterceptedCall2": Array [
+    "promiseUnusedContextInterceptedCall2": [
       1,
       2,
       3,
     ],
     "promiseUnusedContextInterceptedTap1": undefined,
   },
-  "sync": Object {
-    "callAsyncIntercepted": Object {
+  "sync": {
+    "callAsyncIntercepted": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncInterceptedCall1": Array [
+    "callAsyncInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedCall2": Array [
+    "callAsyncInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedTap1": Object {
+    "callAsyncInterceptedTap1": {
       "fn": 2,
       "name": "sync2",
       "type": "sync",
     },
-    "callAsyncInterceptedTap2": Object {
+    "callAsyncInterceptedTap2": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "callAsyncMultipleSync": Object {
+    "callAsyncMultipleSync": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncCalled1": true,
     "callAsyncMultipleSyncCalled2": true,
-    "callAsyncMultipleSyncError": Object {
+    "callAsyncMultipleSyncError": {
       "error": "Error in sync2",
       "type": "async",
     },
     "callAsyncMultipleSyncErrorCalled1": true,
     "callAsyncMultipleSyncErrorCalled2": true,
-    "callAsyncMultipleSyncWithArg": Object {
+    "callAsyncMultipleSyncWithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgCalled1": 42,
     "callAsyncMultipleSyncWithArgCalled2": 42,
-    "callAsyncMultipleSyncWithArgFirstReturn": Object {
+    "callAsyncMultipleSyncWithArgFirstReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgFirstReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgFirstReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgLastReturn": Object {
+    "callAsyncMultipleSyncWithArgLastReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgLastReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgLastReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgNoReturn": Object {
+    "callAsyncMultipleSyncWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgNoReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgNoReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgs": Object {
+    "callAsyncMultipleSyncWithArgs": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncMultipleSyncWithArgsCalled1": Array [
+    "callAsyncMultipleSyncWithArgsCalled1": [
       42,
       43,
       44,
     ],
-    "callAsyncMultipleSyncWithArgsCalled2": Array [
+    "callAsyncMultipleSyncWithArgsCalled2": [
       42,
       43,
       44,
     ],
-    "callAsyncNone": Object {
+    "callAsyncNone": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncNoneWithArg": Object {
+    "callAsyncNoneWithArg": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncSingleSync": Object {
+    "callAsyncSingleSync": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSingleSyncCalled": true,
-    "callAsyncSingleSyncWithArg": Object {
+    "callAsyncSingleSyncWithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSingleSyncWithArgCalled": 42,
-    "promiseIntercepted": Object {
+    "promiseIntercepted": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseInterceptedCall1": Array [
+    "promiseInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedCall2": Array [
+    "promiseInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedTap1": Object {
+    "promiseInterceptedTap1": {
       "fn": 2,
       "name": "sync2",
       "type": "sync",
     },
-    "promiseInterceptedTap2": Object {
+    "promiseInterceptedTap2": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "promiseMultipleSync": Object {
+    "promiseMultipleSync": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncCalled1": true,
     "promiseMultipleSyncCalled2": true,
-    "promiseMultipleSyncError": Object {
+    "promiseMultipleSyncError": {
       "error": "Error in sync2",
       "type": "promise",
     },
     "promiseMultipleSyncErrorCalled1": true,
     "promiseMultipleSyncErrorCalled2": true,
-    "promiseMultipleSyncWithArg": Object {
+    "promiseMultipleSyncWithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgCalled1": 42,
     "promiseMultipleSyncWithArgCalled2": 42,
-    "promiseMultipleSyncWithArgFirstReturn": Object {
+    "promiseMultipleSyncWithArgFirstReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgFirstReturnCalled1": 42,
     "promiseMultipleSyncWithArgFirstReturnCalled2": 42,
-    "promiseMultipleSyncWithArgLastReturn": Object {
+    "promiseMultipleSyncWithArgLastReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgLastReturnCalled1": 42,
     "promiseMultipleSyncWithArgLastReturnCalled2": 42,
-    "promiseMultipleSyncWithArgNoReturn": Object {
+    "promiseMultipleSyncWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgNoReturnCalled1": 42,
     "promiseMultipleSyncWithArgNoReturnCalled2": 42,
-    "promiseMultipleSyncWithArgs": Object {
+    "promiseMultipleSyncWithArgs": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseMultipleSyncWithArgsCalled1": Array [
+    "promiseMultipleSyncWithArgsCalled1": [
       42,
       43,
       44,
     ],
-    "promiseMultipleSyncWithArgsCalled2": Array [
+    "promiseMultipleSyncWithArgsCalled2": [
       42,
       43,
       44,
     ],
-    "promiseNone": Object {
+    "promiseNone": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseNoneWithArg": Object {
+    "promiseNoneWithArg": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseSingleSync": Object {
+    "promiseSingleSync": {
       "type": "promise",
       "value": undefined,
     },
     "promiseSingleSyncCalled": true,
-    "promiseSingleSyncWithArg": Object {
+    "promiseSingleSyncWithArg": {
       "type": "promise",
       "value": undefined,
     },
@@ -1437,76 +1437,76 @@
 `;
 
 exports[`AsyncSeriesLoopHook should have to correct behavior 1`] = `
-Object {
-  "async": Object {
-    "callAsyncBrokenPromise": Object {
+{
+  "async": {
+    "callAsyncBrokenPromise": {
       "error": "Tap function (tapPromise) did not return promise (returned this is not a promise)",
     },
-    "callAsyncMixed": Object {
+    "callAsyncMixed": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMixedCalled1": 124,
     "callAsyncMixedCalled2": 83,
     "callAsyncMixedCalled3": 42,
-    "callAsyncMultipleAsync": Object {
+    "callAsyncMultipleAsync": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleAsyncCalled1": 83,
     "callAsyncMultipleAsyncCalled2": 42,
-    "callAsyncMultiplePromise": Object {
+    "callAsyncMultiplePromise": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultiplePromiseCalled1": 83,
     "callAsyncMultiplePromiseCalled2": 42,
-    "callAsyncSingleAsync": Object {
+    "callAsyncSingleAsync": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSingleAsyncCalled": 42,
-    "callAsyncSinglePromise": Object {
+    "callAsyncSinglePromise": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSinglePromiseCalled": 42,
-    "promiseBrokenPromise": Object {
+    "promiseBrokenPromise": {
       "error": "Tap function (tapPromise) did not return promise (returned this is not a promise)",
       "type": "promise",
     },
-    "promiseMixed": Object {
+    "promiseMixed": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMixedCalled1": 124,
     "promiseMixedCalled2": 83,
     "promiseMixedCalled3": 42,
-    "promiseMultipleAsync": Object {
+    "promiseMultipleAsync": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleAsyncCalled1": 83,
     "promiseMultipleAsyncCalled2": 42,
-    "promiseMultiplePromise": Object {
+    "promiseMultiplePromise": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultiplePromiseCalled1": 83,
     "promiseMultiplePromiseCalled2": 42,
-    "promiseSingleAsync": Object {
+    "promiseSingleAsync": {
       "type": "promise",
       "value": undefined,
     },
     "promiseSingleAsyncCalled": 42,
-    "promiseSinglePromise": Object {
+    "promiseSinglePromise": {
       "type": "promise",
       "value": undefined,
     },
     "promiseSinglePromiseCalled": 42,
   },
-  "sync": Object {
-    "callAsyncInterceptedSync": Object {
+  "sync": {
+    "callAsyncInterceptedSync": {
       "type": "async",
       "value": undefined,
     },
@@ -1515,26 +1515,26 @@
     "callAsyncInterceptedSyncCalledCall": 1,
     "callAsyncInterceptedSyncCalledLoop": 83,
     "callAsyncInterceptedSyncCalledTap": 125,
-    "callAsyncMultipleSync": Object {
+    "callAsyncMultipleSync": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncCalled1": 83,
     "callAsyncMultipleSyncCalled2": 42,
-    "callAsyncNone": Object {
+    "callAsyncNone": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncNoneWithArg": Object {
+    "callAsyncNoneWithArg": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncSingleSync": Object {
+    "callAsyncSingleSync": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSingleSyncCalled": 42,
-    "promiseInterceptedSync": Object {
+    "promiseInterceptedSync": {
       "type": "promise",
       "value": undefined,
     },
@@ -1543,21 +1543,21 @@
     "promiseInterceptedSyncCalledCall": 1,
     "promiseInterceptedSyncCalledLoop": 83,
     "promiseInterceptedSyncCalledTap": 125,
-    "promiseMultipleSync": Object {
+    "promiseMultipleSync": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncCalled1": 83,
     "promiseMultipleSyncCalled2": 42,
-    "promiseNone": Object {
+    "promiseNone": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseNoneWithArg": Object {
+    "promiseNoneWithArg": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseSingleSync": Object {
+    "promiseSingleSync": {
       "type": "promise",
       "value": undefined,
     },
@@ -1567,656 +1567,656 @@
 `;
 
 exports[`AsyncSeriesWaterfallHook should have to correct behavior 1`] = `
-Object {
-  "async": Object {
-    "callAsyncMultipleAsyncEarlyError": Object {
+{
+  "async": {
+    "callAsyncMultipleAsyncEarlyError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncMultipleAsyncError": Object {
+    "callAsyncMultipleAsyncError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncMultipleAsyncLateError": Object {
+    "callAsyncMultipleAsyncLateError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncMultipleAsyncLateErrorEarlyResult1": Object {
+    "callAsyncMultipleAsyncLateErrorEarlyResult1": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncMultipleAsyncLateErrorEarlyResult2": Object {
+    "callAsyncMultipleAsyncLateErrorEarlyResult2": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncMultipleAsyncWithArg": Object {
+    "callAsyncMultipleAsyncWithArg": {
       "type": "async",
       "value": 45,
     },
     "callAsyncMultipleAsyncWithArgCalled1": 42,
     "callAsyncMultipleAsyncWithArgCalled2": 43,
-    "callAsyncMultipleAsyncWithArgFirstReturn": Object {
+    "callAsyncMultipleAsyncWithArgFirstReturn": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultipleAsyncWithArgFirstReturnCalled1": 42,
     "callAsyncMultipleAsyncWithArgFirstReturnCalled2": 43,
-    "callAsyncMultipleAsyncWithArgLastReturn": Object {
+    "callAsyncMultipleAsyncWithArgLastReturn": {
       "type": "async",
       "value": 44,
     },
     "callAsyncMultipleAsyncWithArgLastReturnCalled1": 42,
     "callAsyncMultipleAsyncWithArgLastReturnCalled2": 42,
-    "callAsyncMultipleAsyncWithArgNoReturn": Object {
+    "callAsyncMultipleAsyncWithArgNoReturn": {
       "type": "async",
       "value": 42,
     },
     "callAsyncMultipleAsyncWithArgNoReturnCalled1": 42,
     "callAsyncMultipleAsyncWithArgNoReturnCalled2": 42,
-    "callAsyncMultipleMixed1WithArg": Object {
+    "callAsyncMultipleMixed1WithArg": {
       "type": "async",
       "value": 48,
     },
     "callAsyncMultipleMixed1WithArgCalled1": 42,
     "callAsyncMultipleMixed1WithArgCalled2": 43,
     "callAsyncMultipleMixed1WithArgCalled3": 45,
-    "callAsyncMultipleMixed2WithArg": Object {
+    "callAsyncMultipleMixed2WithArg": {
       "type": "async",
       "value": 45,
     },
     "callAsyncMultipleMixed2WithArgCalled1": 42,
     "callAsyncMultipleMixed2WithArgCalled2": 43,
-    "callAsyncMultipleMixed3WithArg": Object {
+    "callAsyncMultipleMixed3WithArg": {
       "type": "async",
       "value": 48,
     },
     "callAsyncMultipleMixed3WithArgCalled1": 42,
     "callAsyncMultipleMixed3WithArgCalled2": 43,
     "callAsyncMultipleMixed3WithArgCalled3": 45,
-    "callAsyncMultipleMixedError1WithArg": Object {
+    "callAsyncMultipleMixedError1WithArg": {
       "error": "Error in sync",
       "type": "async",
     },
     "callAsyncMultipleMixedError1WithArgCalled1": 42,
     "callAsyncMultipleMixedError1WithArgCalled2": 42,
     "callAsyncMultipleMixedError1WithArgCalled3": 43,
-    "callAsyncMultipleMixedError2WithArg": Object {
+    "callAsyncMultipleMixedError2WithArg": {
       "error": "Error in promise",
       "type": "async",
     },
     "callAsyncMultipleMixedError2WithArgCalled1": 42,
     "callAsyncMultipleMixedError2WithArgCalled2": 42,
-    "callAsyncMultipleMixedError3WithArg": Object {
+    "callAsyncMultipleMixedError3WithArg": {
       "error": "Error in async",
       "type": "async",
     },
     "callAsyncMultipleMixedError3WithArgCalled1": 42,
-    "callAsyncMultipleMixedLateError": Object {
+    "callAsyncMultipleMixedLateError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncMultiplePromiseEarlyError": Object {
+    "callAsyncMultiplePromiseEarlyError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncMultiplePromiseError": Object {
+    "callAsyncMultiplePromiseError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncMultiplePromiseLateError": Object {
+    "callAsyncMultiplePromiseLateError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncMultiplePromiseWithArg": Object {
+    "callAsyncMultiplePromiseWithArg": {
       "type": "async",
       "value": 45,
     },
     "callAsyncMultiplePromiseWithArgCalled1": 42,
     "callAsyncMultiplePromiseWithArgCalled2": 43,
-    "callAsyncMultiplePromiseWithArgFirstReturn": Object {
+    "callAsyncMultiplePromiseWithArgFirstReturn": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultiplePromiseWithArgFirstReturnCalled1": 42,
     "callAsyncMultiplePromiseWithArgFirstReturnCalled2": 43,
-    "callAsyncMultiplePromiseWithArgLastReturn": Object {
+    "callAsyncMultiplePromiseWithArgLastReturn": {
       "type": "async",
       "value": 44,
     },
     "callAsyncMultiplePromiseWithArgLastReturnCalled1": 42,
     "callAsyncMultiplePromiseWithArgLastReturnCalled2": 42,
-    "callAsyncMultiplePromiseWithArgNoReturn": Object {
+    "callAsyncMultiplePromiseWithArgNoReturn": {
       "type": "async",
       "value": 42,
     },
     "callAsyncMultiplePromiseWithArgNoReturnCalled1": 42,
     "callAsyncMultiplePromiseWithArgNoReturnCalled2": 42,
-    "callAsyncMultipleSync": Object {
+    "callAsyncMultipleSync": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncMultipleSyncError": Object {
+    "callAsyncMultipleSyncError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncMultipleSyncLastReturn": Object {
+    "callAsyncMultipleSyncLastReturn": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncMultipleSyncNoReturn": Object {
+    "callAsyncMultipleSyncNoReturn": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncMultipleSyncWithArg": Object {
+    "callAsyncMultipleSyncWithArg": {
       "type": "async",
       "value": 45,
     },
     "callAsyncMultipleSyncWithArgCalled1": 42,
     "callAsyncMultipleSyncWithArgCalled2": 43,
-    "callAsyncMultipleSyncWithArgFirstReturn": Object {
+    "callAsyncMultipleSyncWithArgFirstReturn": {
       "type": "async",
       "value": 43,
     },
     "callAsyncMultipleSyncWithArgFirstReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgFirstReturnCalled2": 43,
-    "callAsyncMultipleSyncWithArgLastReturn": Object {
+    "callAsyncMultipleSyncWithArgLastReturn": {
       "type": "async",
       "value": 44,
     },
     "callAsyncMultipleSyncWithArgLastReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgLastReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgNoReturn": Object {
+    "callAsyncMultipleSyncWithArgNoReturn": {
       "type": "async",
       "value": 42,
     },
     "callAsyncMultipleSyncWithArgNoReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgNoReturnCalled2": 42,
-    "callAsyncNone": Object {
+    "callAsyncNone": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncNoneWithArg": Object {
+    "callAsyncNoneWithArg": {
       "type": "async",
       "value": 42,
     },
-    "callAsyncSingleAsyncWithArg": Object {
+    "callAsyncSingleAsyncWithArg": {
       "type": "async",
       "value": 42,
     },
     "callAsyncSingleAsyncWithArgCalled1": 42,
-    "callAsyncSinglePromiseWithArg": Object {
+    "callAsyncSinglePromiseWithArg": {
       "type": "async",
       "value": 43,
     },
     "callAsyncSinglePromiseWithArgCalled1": 42,
-    "callAsyncSingleSync": Object {
+    "callAsyncSingleSync": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncSingleSyncWithArg": Object {
+    "callAsyncSingleSyncWithArg": {
       "type": "async",
       "value": 43,
     },
     "callAsyncSingleSyncWithArgCalled1": 42,
-    "callAsyncSingleSyncWithArgNoReturn": Object {
+    "callAsyncSingleSyncWithArgNoReturn": {
       "type": "async",
       "value": 42,
     },
     "callAsyncSingleSyncWithArgNoReturnCalled1": 42,
-    "promiseMultipleAsyncEarlyError": Object {
+    "promiseMultipleAsyncEarlyError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseMultipleAsyncError": Object {
+    "promiseMultipleAsyncError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseMultipleAsyncLateError": Object {
+    "promiseMultipleAsyncLateError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseMultipleAsyncLateErrorEarlyResult1": Object {
+    "promiseMultipleAsyncLateErrorEarlyResult1": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseMultipleAsyncLateErrorEarlyResult2": Object {
+    "promiseMultipleAsyncLateErrorEarlyResult2": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseMultipleAsyncWithArg": Object {
+    "promiseMultipleAsyncWithArg": {
       "type": "promise",
       "value": 45,
     },
     "promiseMultipleAsyncWithArgCalled1": 42,
     "promiseMultipleAsyncWithArgCalled2": 43,
-    "promiseMultipleAsyncWithArgFirstReturn": Object {
+    "promiseMultipleAsyncWithArgFirstReturn": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultipleAsyncWithArgFirstReturnCalled1": 42,
     "promiseMultipleAsyncWithArgFirstReturnCalled2": 43,
-    "promiseMultipleAsyncWithArgLastReturn": Object {
+    "promiseMultipleAsyncWithArgLastReturn": {
       "type": "promise",
       "value": 44,
     },
     "promiseMultipleAsyncWithArgLastReturnCalled1": 42,
     "promiseMultipleAsyncWithArgLastReturnCalled2": 42,
-    "promiseMultipleAsyncWithArgNoReturn": Object {
+    "promiseMultipleAsyncWithArgNoReturn": {
       "type": "promise",
       "value": 42,
     },
     "promiseMultipleAsyncWithArgNoReturnCalled1": 42,
     "promiseMultipleAsyncWithArgNoReturnCalled2": 42,
-    "promiseMultipleMixed1WithArg": Object {
+    "promiseMultipleMixed1WithArg": {
       "type": "promise",
       "value": 48,
     },
     "promiseMultipleMixed1WithArgCalled1": 42,
     "promiseMultipleMixed1WithArgCalled2": 43,
     "promiseMultipleMixed1WithArgCalled3": 45,
-    "promiseMultipleMixed2WithArg": Object {
+    "promiseMultipleMixed2WithArg": {
       "type": "promise",
       "value": 45,
     },
     "promiseMultipleMixed2WithArgCalled1": 42,
     "promiseMultipleMixed2WithArgCalled2": 43,
-    "promiseMultipleMixed3WithArg": Object {
+    "promiseMultipleMixed3WithArg": {
       "type": "promise",
       "value": 48,
     },
     "promiseMultipleMixed3WithArgCalled1": 42,
     "promiseMultipleMixed3WithArgCalled2": 43,
     "promiseMultipleMixed3WithArgCalled3": 45,
-    "promiseMultipleMixedError1WithArg": Object {
+    "promiseMultipleMixedError1WithArg": {
       "error": "Error in sync",
       "type": "promise",
     },
     "promiseMultipleMixedError1WithArgCalled1": 42,
     "promiseMultipleMixedError1WithArgCalled2": 42,
     "promiseMultipleMixedError1WithArgCalled3": 43,
-    "promiseMultipleMixedError2WithArg": Object {
+    "promiseMultipleMixedError2WithArg": {
       "error": "Error in promise",
       "type": "promise",
     },
     "promiseMultipleMixedError2WithArgCalled1": 42,
     "promiseMultipleMixedError2WithArgCalled2": 42,
-    "promiseMultipleMixedError3WithArg": Object {
+    "promiseMultipleMixedError3WithArg": {
       "error": "Error in async",
       "type": "promise",
     },
     "promiseMultipleMixedError3WithArgCalled1": 42,
-    "promiseMultipleMixedLateError": Object {
+    "promiseMultipleMixedLateError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseMultiplePromiseEarlyError": Object {
+    "promiseMultiplePromiseEarlyError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseMultiplePromiseError": Object {
+    "promiseMultiplePromiseError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseMultiplePromiseLateError": Object {
+    "promiseMultiplePromiseLateError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseMultiplePromiseWithArg": Object {
+    "promiseMultiplePromiseWithArg": {
       "type": "promise",
       "value": 45,
     },
     "promiseMultiplePromiseWithArgCalled1": 42,
     "promiseMultiplePromiseWithArgCalled2": 43,
-    "promiseMultiplePromiseWithArgFirstReturn": Object {
+    "promiseMultiplePromiseWithArgFirstReturn": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultiplePromiseWithArgFirstReturnCalled1": 42,
     "promiseMultiplePromiseWithArgFirstReturnCalled2": 43,
-    "promiseMultiplePromiseWithArgLastReturn": Object {
+    "promiseMultiplePromiseWithArgLastReturn": {
       "type": "promise",
       "value": 44,
     },
     "promiseMultiplePromiseWithArgLastReturnCalled1": 42,
     "promiseMultiplePromiseWithArgLastReturnCalled2": 42,
-    "promiseMultiplePromiseWithArgNoReturn": Object {
+    "promiseMultiplePromiseWithArgNoReturn": {
       "type": "promise",
       "value": 42,
     },
     "promiseMultiplePromiseWithArgNoReturnCalled1": 42,
     "promiseMultiplePromiseWithArgNoReturnCalled2": 42,
-    "promiseMultipleSync": Object {
+    "promiseMultipleSync": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseMultipleSyncError": Object {
+    "promiseMultipleSyncError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseMultipleSyncLastReturn": Object {
+    "promiseMultipleSyncLastReturn": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseMultipleSyncNoReturn": Object {
+    "promiseMultipleSyncNoReturn": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseMultipleSyncWithArg": Object {
+    "promiseMultipleSyncWithArg": {
       "type": "promise",
       "value": 45,
     },
     "promiseMultipleSyncWithArgCalled1": 42,
     "promiseMultipleSyncWithArgCalled2": 43,
-    "promiseMultipleSyncWithArgFirstReturn": Object {
+    "promiseMultipleSyncWithArgFirstReturn": {
       "type": "promise",
       "value": 43,
     },
     "promiseMultipleSyncWithArgFirstReturnCalled1": 42,
     "promiseMultipleSyncWithArgFirstReturnCalled2": 43,
-    "promiseMultipleSyncWithArgLastReturn": Object {
+    "promiseMultipleSyncWithArgLastReturn": {
       "type": "promise",
       "value": 44,
     },
     "promiseMultipleSyncWithArgLastReturnCalled1": 42,
     "promiseMultipleSyncWithArgLastReturnCalled2": 42,
-    "promiseMultipleSyncWithArgNoReturn": Object {
+    "promiseMultipleSyncWithArgNoReturn": {
       "type": "promise",
       "value": 42,
     },
     "promiseMultipleSyncWithArgNoReturnCalled1": 42,
     "promiseMultipleSyncWithArgNoReturnCalled2": 42,
-    "promiseNone": Object {
+    "promiseNone": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseNoneWithArg": Object {
+    "promiseNoneWithArg": {
       "type": "promise",
       "value": 42,
     },
-    "promiseSingleAsyncWithArg": Object {
+    "promiseSingleAsyncWithArg": {
       "type": "promise",
       "value": 42,
     },
     "promiseSingleAsyncWithArgCalled1": 42,
-    "promiseSinglePromiseWithArg": Object {
+    "promiseSinglePromiseWithArg": {
       "type": "promise",
       "value": 43,
     },
     "promiseSinglePromiseWithArgCalled1": 42,
-    "promiseSingleSync": Object {
+    "promiseSingleSync": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseSingleSyncWithArg": Object {
+    "promiseSingleSyncWithArg": {
       "type": "promise",
       "value": 43,
     },
     "promiseSingleSyncWithArgCalled1": 42,
-    "promiseSingleSyncWithArgNoReturn": Object {
+    "promiseSingleSyncWithArgNoReturn": {
       "type": "promise",
       "value": 42,
     },
     "promiseSingleSyncWithArgNoReturnCalled1": 42,
   },
-  "intercept": Object {
-    "callAsyncContextIntercepted": Object {
+  "intercept": {
+    "callAsyncContextIntercepted": {
       "type": "async",
       "value": 48,
     },
-    "callAsyncContextInterceptedCall1": Array [
-      Object {
+    "callAsyncContextInterceptedCall1": [
+      {
         "number": 42,
       },
       1,
       2,
       3,
     ],
-    "callAsyncContextInterceptedCall2": Array [
+    "callAsyncContextInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "callAsyncContextInterceptedTap1": Object {
+    "callAsyncContextInterceptedTap1": {
       "number": 42,
     },
-    "callAsyncIntercepted": Object {
+    "callAsyncIntercepted": {
       "type": "async",
       "value": 9,
     },
-    "callAsyncInterceptedCall1": Array [
+    "callAsyncInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedCall2": Array [
+    "callAsyncInterceptedCall2": [
       1,
       2,
       3,
     ],
     "callAsyncInterceptedResult1": 9,
     "callAsyncInterceptedResult2": 9,
-    "callAsyncInterceptedTap1": Object {
+    "callAsyncInterceptedTap1": {
       "fn": 2,
       "name": "promise",
       "type": "promise",
     },
-    "callAsyncInterceptedTap2": Object {
+    "callAsyncInterceptedTap2": {
       "fn": 3,
       "name": "sync",
       "type": "sync",
     },
-    "callAsyncUnusedContextIntercepted": Object {
+    "callAsyncUnusedContextIntercepted": {
       "type": "async",
       "value": 6,
     },
-    "callAsyncUnusedContextInterceptedCall1": Array [
+    "callAsyncUnusedContextInterceptedCall1": [
       undefined,
       1,
       2,
       3,
     ],
-    "callAsyncUnusedContextInterceptedCall2": Array [
+    "callAsyncUnusedContextInterceptedCall2": [
       1,
       2,
       3,
     ],
     "callAsyncUnusedContextInterceptedTap1": undefined,
-    "promiseContextIntercepted": Object {
+    "promiseContextIntercepted": {
       "type": "promise",
       "value": 48,
     },
-    "promiseContextInterceptedCall1": Array [
-      Object {
+    "promiseContextInterceptedCall1": [
+      {
         "number": 42,
       },
       1,
       2,
       3,
     ],
-    "promiseContextInterceptedCall2": Array [
+    "promiseContextInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "promiseContextInterceptedTap1": Object {
+    "promiseContextInterceptedTap1": {
       "number": 42,
     },
-    "promiseIntercepted": Object {
+    "promiseIntercepted": {
       "type": "promise",
       "value": 9,
     },
-    "promiseInterceptedCall1": Array [
+    "promiseInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedCall2": Array [
+    "promiseInterceptedCall2": [
       1,
       2,
       3,
     ],
     "promiseInterceptedResult1": 9,
     "promiseInterceptedResult2": 9,
-    "promiseInterceptedTap1": Object {
+    "promiseInterceptedTap1": {
       "fn": 2,
       "name": "promise",
       "type": "promise",
     },
-    "promiseInterceptedTap2": Object {
+    "promiseInterceptedTap2": {
       "fn": 3,
       "name": "sync",
       "type": "sync",
     },
-    "promiseUnusedContextIntercepted": Object {
+    "promiseUnusedContextIntercepted": {
       "type": "promise",
       "value": 6,
     },
-    "promiseUnusedContextInterceptedCall1": Array [
+    "promiseUnusedContextInterceptedCall1": [
       undefined,
       1,
       2,
       3,
     ],
-    "promiseUnusedContextInterceptedCall2": Array [
+    "promiseUnusedContextInterceptedCall2": [
       1,
       2,
       3,
     ],
     "promiseUnusedContextInterceptedTap1": undefined,
   },
-  "sync": Object {
-    "callAsyncIntercepted": Object {
+  "sync": {
+    "callAsyncIntercepted": {
       "type": "async",
       "value": 9,
     },
-    "callAsyncInterceptedCall1": Array [
+    "callAsyncInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedCall2": Array [
+    "callAsyncInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedTap1": Object {
+    "callAsyncInterceptedTap1": {
       "fn": 2,
       "name": "sync2",
       "type": "sync",
     },
-    "callAsyncInterceptedTap2": Object {
+    "callAsyncInterceptedTap2": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "callAsyncMultipleSync": Object {
+    "callAsyncMultipleSync": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncMultipleSyncError": Object {
+    "callAsyncMultipleSyncError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncMultipleSyncWithArg": Object {
+    "callAsyncMultipleSyncWithArg": {
       "type": "async",
       "value": 127,
     },
     "callAsyncMultipleSyncWithArgCalled1": 42,
     "callAsyncMultipleSyncWithArgCalled2": 84,
-    "callAsyncMultipleSyncWithArgFirstReturn": Object {
+    "callAsyncMultipleSyncWithArgFirstReturn": {
       "type": "async",
       "value": 84,
     },
     "callAsyncMultipleSyncWithArgFirstReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgFirstReturnCalled2": 84,
-    "callAsyncMultipleSyncWithArgLastReturn": Object {
+    "callAsyncMultipleSyncWithArgLastReturn": {
       "type": "async",
       "value": 85,
     },
     "callAsyncMultipleSyncWithArgLastReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgLastReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgNoReturn": Object {
+    "callAsyncMultipleSyncWithArgNoReturn": {
       "type": "async",
       "value": 42,
     },
     "callAsyncMultipleSyncWithArgNoReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgNoReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgs": Object {
+    "callAsyncMultipleSyncWithArgs": {
       "type": "async",
       "value": 217,
     },
-    "callAsyncMultipleSyncWithArgsCalled1": Array [
+    "callAsyncMultipleSyncWithArgsCalled1": [
       42,
       43,
       44,
     ],
-    "callAsyncMultipleSyncWithArgsCalled2": Array [
+    "callAsyncMultipleSyncWithArgsCalled2": [
       129,
       43,
       44,
     ],
-    "callAsyncNone": Object {
+    "callAsyncNone": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncNoneWithArg": Object {
+    "callAsyncNoneWithArg": {
       "type": "async",
       "value": 42,
     },
-    "callAsyncSingleSync": Object {
+    "callAsyncSingleSync": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncSingleSyncWithArg": Object {
+    "callAsyncSingleSyncWithArg": {
       "type": "async",
       "value": 42,
     },
     "callAsyncSingleSyncWithArgCalled": 42,
-    "promiseIntercepted": Object {
+    "promiseIntercepted": {
       "type": "promise",
       "value": 9,
     },
-    "promiseInterceptedCall1": Array [
+    "promiseInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedCall2": Array [
+    "promiseInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedTap1": Object {
+    "promiseInterceptedTap1": {
       "fn": 2,
       "name": "sync2",
       "type": "sync",
     },
-    "promiseInterceptedTap2": Object {
+    "promiseInterceptedTap2": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "promiseMultipleSync": Object {
+    "promiseMultipleSync": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseMultipleSyncError": Object {
+    "promiseMultipleSyncError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseMultipleSyncWithArg": Object {
+    "promiseMultipleSyncWithArg": {
       "type": "promise",
       "value": 127,
     },
     "promiseMultipleSyncWithArgCalled1": 42,
     "promiseMultipleSyncWithArgCalled2": 84,
-    "promiseMultipleSyncWithArgFirstReturn": Object {
+    "promiseMultipleSyncWithArgFirstReturn": {
       "type": "promise",
       "value": 84,
     },
     "promiseMultipleSyncWithArgFirstReturnCalled1": 42,
     "promiseMultipleSyncWithArgFirstReturnCalled2": 84,
-    "promiseMultipleSyncWithArgLastReturn": Object {
+    "promiseMultipleSyncWithArgLastReturn": {
       "type": "promise",
       "value": 85,
     },
     "promiseMultipleSyncWithArgLastReturnCalled1": 42,
     "promiseMultipleSyncWithArgLastReturnCalled2": 42,
-    "promiseMultipleSyncWithArgNoReturn": Object {
+    "promiseMultipleSyncWithArgNoReturn": {
       "type": "promise",
       "value": 42,
     },
     "promiseMultipleSyncWithArgNoReturnCalled1": 42,
     "promiseMultipleSyncWithArgNoReturnCalled2": 42,
-    "promiseMultipleSyncWithArgs": Object {
+    "promiseMultipleSyncWithArgs": {
       "type": "promise",
       "value": 217,
     },
-    "promiseMultipleSyncWithArgsCalled1": Array [
+    "promiseMultipleSyncWithArgsCalled1": [
       42,
       43,
       44,
     ],
-    "promiseMultipleSyncWithArgsCalled2": Array [
+    "promiseMultipleSyncWithArgsCalled2": [
       129,
       43,
       44,
     ],
-    "promiseNone": Object {
+    "promiseNone": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseNoneWithArg": Object {
+    "promiseNoneWithArg": {
       "type": "promise",
       "value": 42,
     },
-    "promiseSingleSync": Object {
+    "promiseSingleSync": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseSingleSyncWithArg": Object {
+    "promiseSingleSyncWithArg": {
       "type": "promise",
       "value": 42,
     },
--- a/lib/__tests__/__snapshots__/HookCodeFactory.js.snap
+++ b/lib/__tests__/__snapshots__/HookCodeFactory.js.snap
@@ -12,18 +12,6 @@
 "
 `;
 
-exports[`HookCodeFactory callTap (no args, no intercept) async with onResult 2`] = `
-"var _fn1 = _x[1];
-_fn1(function(_err1, _result1) {
-  if (_err1) {
-    onError(_err1);
-  } else {
-    onResult(_result1);
-  }
-});
-"
-`;
-
 exports[`HookCodeFactory callTap (no args, no intercept) async without onResult 1`] = `
 "var _fn1 = _x[1];
 _fn1((function(_err1) {
@@ -36,18 +24,6 @@
 "
 `;
 
-exports[`HookCodeFactory callTap (no args, no intercept) async without onResult 2`] = `
-"var _fn1 = _x[1];
-_fn1(function(_err1) {
-  if (_err1) {
-    onError(_err1);
-  } else {
-    onDone();
-  }
-});
-"
-`;
-
 exports[`HookCodeFactory callTap (no args, no intercept) promise with onResult 1`] = `
 "var _fn2 = _x[2];
 var _hasResult2 = false;
@@ -64,29 +40,6 @@
 "
 `;
 
-exports[`HookCodeFactory callTap (no args, no intercept) promise with onResult 2`] = `
-"var _fn2 = _x[2];
-var _hasResult2 = false;
-var _promise2 = _fn2();
-if (!_promise2 || !_promise2.then)
-  throw new Error(
-    \\"Tap function (tapPromise) did not return promise (returned \\" +
-      _promise2 +
-      \\")\\"
-  );
-_promise2.then(
-  function(_result2) {
-    _hasResult2 = true;
-    onResult(_result2);
-  },
-  function(_err2) {
-    if (_hasResult2) throw _err2;
-    onError(_err2);
-  }
-);
-"
-`;
-
 exports[`HookCodeFactory callTap (no args, no intercept) promise without onResult 1`] = `
 "var _fn2 = _x[2];
 var _hasResult2 = false;
@@ -103,29 +56,6 @@
 "
 `;
 
-exports[`HookCodeFactory callTap (no args, no intercept) promise without onResult 2`] = `
-"var _fn2 = _x[2];
-var _hasResult2 = false;
-var _promise2 = _fn2();
-if (!_promise2 || !_promise2.then)
-  throw new Error(
-    \\"Tap function (tapPromise) did not return promise (returned \\" +
-      _promise2 +
-      \\")\\"
-  );
-_promise2.then(
-  function(_result2) {
-    _hasResult2 = true;
-    onDone();
-  },
-  function(_err2) {
-    if (_hasResult2) throw _err2;
-    onError(_err2);
-  }
-);
-"
-`;
-
 exports[`HookCodeFactory callTap (no args, no intercept) sync with onResult 1`] = `
 "var _fn0 = _x[0];
 var _hasError0 = false;
@@ -141,21 +71,6 @@
 "
 `;
 
-exports[`HookCodeFactory callTap (no args, no intercept) sync with onResult 2`] = `
-"var _fn0 = _x[0];
-var _hasError0 = false;
-try {
-  var _result0 = _fn0();
-} catch (_err) {
-  _hasError0 = true;
-  onError(_err);
-}
-if (!_hasError0) {
-  onResult(_result0);
-}
-"
-`;
-
 exports[`HookCodeFactory callTap (no args, no intercept) sync without onResult 1`] = `
 "var _fn0 = _x[0];
 var _hasError0 = false;
@@ -171,21 +86,6 @@
 "
 `;
 
-exports[`HookCodeFactory callTap (no args, no intercept) sync without onResult 2`] = `
-"var _fn0 = _x[0];
-var _hasError0 = false;
-try {
-  _fn0();
-} catch (_err) {
-  _hasError0 = true;
-  onError(_err);
-}
-if (!_hasError0) {
-  onDone();
-}
-"
-`;
-
 exports[`HookCodeFactory callTap (with args, no intercept) async with onResult 1`] = `
 "var _fn1 = _x[1];
 _fn1(a, b, c, (function(_err1, _result1) {
@@ -198,18 +98,6 @@
 "
 `;
 
-exports[`HookCodeFactory callTap (with args, no intercept) async with onResult 2`] = `
-"var _fn1 = _x[1];
-_fn1(a, b, c, function(_err1, _result1) {
-  if (_err1) {
-    onError(_err1);
-  } else {
-    onResult(_result1);
-  }
-});
-"
-`;
-
 exports[`HookCodeFactory callTap (with args, no intercept) async without onResult 1`] = `
 "var _fn1 = _x[1];
 _fn1(a, b, c, (function(_err1) {
@@ -222,18 +110,6 @@
 "
 `;
 
-exports[`HookCodeFactory callTap (with args, no intercept) async without onResult 2`] = `
-"var _fn1 = _x[1];
-_fn1(a, b, c, function(_err1) {
-  if (_err1) {
-    onError(_err1);
-  } else {
-    onDone();
-  }
-});
-"
-`;
-
 exports[`HookCodeFactory callTap (with args, no intercept) promise with onResult 1`] = `
 "var _fn2 = _x[2];
 var _hasResult2 = false;
@@ -250,29 +126,6 @@
 "
 `;
 
-exports[`HookCodeFactory callTap (with args, no intercept) promise with onResult 2`] = `
-"var _fn2 = _x[2];
-var _hasResult2 = false;
-var _promise2 = _fn2(a, b, c);
-if (!_promise2 || !_promise2.then)
-  throw new Error(
-    \\"Tap function (tapPromise) did not return promise (returned \\" +
-      _promise2 +
-      \\")\\"
-  );
-_promise2.then(
-  function(_result2) {
-    _hasResult2 = true;
-    onResult(_result2);
-  },
-  function(_err2) {
-    if (_hasResult2) throw _err2;
-    onError(_err2);
-  }
-);
-"
-`;
-
 exports[`HookCodeFactory callTap (with args, no intercept) promise without onResult 1`] = `
 "var _fn2 = _x[2];
 var _hasResult2 = false;
@@ -289,29 +142,6 @@
 "
 `;
 
-exports[`HookCodeFactory callTap (with args, no intercept) promise without onResult 2`] = `
-"var _fn2 = _x[2];
-var _hasResult2 = false;
-var _promise2 = _fn2(a, b, c);
-if (!_promise2 || !_promise2.then)
-  throw new Error(
-    \\"Tap function (tapPromise) did not return promise (returned \\" +
-      _promise2 +
-      \\")\\"
-  );
-_promise2.then(
-  function(_result2) {
-    _hasResult2 = true;
-    onDone();
-  },
-  function(_err2) {
-    if (_hasResult2) throw _err2;
-    onError(_err2);
-  }
-);
-"
-`;
-
 exports[`HookCodeFactory callTap (with args, no intercept) sync with onResult 1`] = `
 "var _fn0 = _x[0];
 var _hasError0 = false;
@@ -327,21 +157,6 @@
 "
 `;
 
-exports[`HookCodeFactory callTap (with args, no intercept) sync with onResult 2`] = `
-"var _fn0 = _x[0];
-var _hasError0 = false;
-try {
-  var _result0 = _fn0(a, b, c);
-} catch (_err) {
-  _hasError0 = true;
-  onError(_err);
-}
-if (!_hasError0) {
-  onResult(_result0);
-}
-"
-`;
-
 exports[`HookCodeFactory callTap (with args, no intercept) sync without onResult 1`] = `
 "var _fn0 = _x[0];
 var _hasError0 = false;
@@ -357,21 +172,6 @@
 "
 `;
 
-exports[`HookCodeFactory callTap (with args, no intercept) sync without onResult 2`] = `
-"var _fn0 = _x[0];
-var _hasError0 = false;
-try {
-  _fn0(a, b, c);
-} catch (_err) {
-  _hasError0 = true;
-  onError(_err);
-}
-if (!_hasError0) {
-  onDone();
-}
-"
-`;
-
 exports[`HookCodeFactory callTap (with args, with intercept) async with onResult 1`] = `
 "var _tap1 = _taps[1];
 _interceptors[0].tap(_tap1);
@@ -387,21 +187,6 @@
 "
 `;
 
-exports[`HookCodeFactory callTap (with args, with intercept) async with onResult 2`] = `
-"var _tap1 = _taps[1];
-_interceptors[0].tap(_tap1);
-_interceptors[1].tap(_tap1);
-var _fn1 = _x[1];
-_fn1(a, b, c, function(_err1, _result1) {
-  if (_err1) {
-    onError(_err1);
-  } else {
-    onResult(_result1);
-  }
-});
-"
-`;
-
 exports[`HookCodeFactory callTap (with args, with intercept) async without onResult 1`] = `
 "var _tap1 = _taps[1];
 _interceptors[0].tap(_tap1);
@@ -417,21 +202,6 @@
 "
 `;
 
-exports[`HookCodeFactory callTap (with args, with intercept) async without onResult 2`] = `
-"var _tap1 = _taps[1];
-_interceptors[0].tap(_tap1);
-_interceptors[1].tap(_tap1);
-var _fn1 = _x[1];
-_fn1(a, b, c, function(_err1) {
-  if (_err1) {
-    onError(_err1);
-  } else {
-    onDone();
-  }
-});
-"
-`;
-
 exports[`HookCodeFactory callTap (with args, with intercept) promise with onResult 1`] = `
 "var _tap2 = _taps[2];
 _interceptors[0].tap(_tap2);
@@ -451,32 +221,6 @@
 "
 `;
 
-exports[`HookCodeFactory callTap (with args, with intercept) promise with onResult 2`] = `
-"var _tap2 = _taps[2];
-_interceptors[0].tap(_tap2);
-_interceptors[1].tap(_tap2);
-var _fn2 = _x[2];
-var _hasResult2 = false;
-var _promise2 = _fn2(a, b, c);
-if (!_promise2 || !_promise2.then)
-  throw new Error(
-    \\"Tap function (tapPromise) did not return promise (returned \\" +
-      _promise2 +
-      \\")\\"
-  );
-_promise2.then(
-  function(_result2) {
-    _hasResult2 = true;
-    onResult(_result2);
-  },
-  function(_err2) {
-    if (_hasResult2) throw _err2;
-    onError(_err2);
-  }
-);
-"
-`;
-
 exports[`HookCodeFactory callTap (with args, with intercept) promise without onResult 1`] = `
 "var _tap2 = _taps[2];
 _interceptors[0].tap(_tap2);
@@ -496,32 +240,6 @@
 "
 `;
 
-exports[`HookCodeFactory callTap (with args, with intercept) promise without onResult 2`] = `
-"var _tap2 = _taps[2];
-_interceptors[0].tap(_tap2);
-_interceptors[1].tap(_tap2);
-var _fn2 = _x[2];
-var _hasResult2 = false;
-var _promise2 = _fn2(a, b, c);
-if (!_promise2 || !_promise2.then)
-  throw new Error(
-    \\"Tap function (tapPromise) did not return promise (returned \\" +
-      _promise2 +
-      \\")\\"
-  );
-_promise2.then(
-  function(_result2) {
-    _hasResult2 = true;
-    onDone();
-  },
-  function(_err2) {
-    if (_hasResult2) throw _err2;
-    onError(_err2);
-  }
-);
-"
-`;
-
 exports[`HookCodeFactory callTap (with args, with intercept) sync with onResult 1`] = `
 "var _tap0 = _taps[0];
 _interceptors[0].tap(_tap0);
@@ -540,24 +258,6 @@
 "
 `;
 
-exports[`HookCodeFactory callTap (with args, with intercept) sync with onResult 2`] = `
-"var _tap0 = _taps[0];
-_interceptors[0].tap(_tap0);
-_interceptors[1].tap(_tap0);
-var _fn0 = _x[0];
-var _hasError0 = false;
-try {
-  var _result0 = _fn0(a, b, c);
-} catch (_err) {
-  _hasError0 = true;
-  onError(_err);
-}
-if (!_hasError0) {
-  onResult(_result0);
-}
-"
-`;
-
 exports[`HookCodeFactory callTap (with args, with intercept) sync without onResult 1`] = `
 "var _tap0 = _taps[0];
 _interceptors[0].tap(_tap0);
@@ -576,24 +276,6 @@
 "
 `;
 
-exports[`HookCodeFactory callTap (with args, with intercept) sync without onResult 2`] = `
-"var _tap0 = _taps[0];
-_interceptors[0].tap(_tap0);
-_interceptors[1].tap(_tap0);
-var _fn0 = _x[0];
-var _hasError0 = false;
-try {
-  _fn0(a, b, c);
-} catch (_err) {
-  _hasError0 = true;
-  onError(_err);
-}
-if (!_hasError0) {
-  onDone();
-}
-"
-`;
-
 exports[`HookCodeFactory taps (mixed) callTapsLooping 1`] = `
 "var _looper = (function() {
 var _loopAsync = false;
@@ -656,75 +338,6 @@
 "
 `;
 
-exports[`HookCodeFactory taps (mixed) callTapsLooping 2`] = `
-"var _looper = function() {
-  var _loopAsync = false;
-  var _loop;
-  do {
-    _loop = false;
-    function _next1() {
-      var _fn2 = _x[2];
-      var _hasResult2 = false;
-      var _promise2 = _fn2(a, b, c);
-      if (!_promise2 || !_promise2.then)
-        throw new Error(
-          \\"Tap function (tapPromise) did not return promise (returned \\" +
-            _promise2 +
-            \\")\\"
-        );
-      _promise2.then(
-        function(_result2) {
-          _hasResult2 = true;
-          if (_result2 !== undefined) {
-            _loop = true;
-            if (_loopAsync) _looper();
-          } else {
-            if (!_loop) {
-              onDone();
-            }
-          }
-        },
-        function(_err2) {
-          if (_hasResult2) throw _err2;
-          onError(2, _err2);
-        }
-      );
-    }
-    var _fn0 = _x[0];
-    var _hasError0 = false;
-    try {
-      var _result0 = _fn0(a, b, c);
-    } catch (_err) {
-      _hasError0 = true;
-      onError(0, _err);
-    }
-    if (!_hasError0) {
-      if (_result0 !== undefined) {
-        _loop = true;
-        if (_loopAsync) _looper();
-      } else {
-        var _fn1 = _x[1];
-        _fn1(a, b, c, function(_err1, _result1) {
-          if (_err1) {
-            onError(1, _err1);
-          } else {
-            if (_result1 !== undefined) {
-              _loop = true;
-              if (_loopAsync) _looper();
-            } else {
-              _next1();
-            }
-          }
-        });
-      }
-    }
-  } while (_loop);
-  _loopAsync = true;
-};
-_looper();
-"
-`;
-
 exports[`HookCodeFactory taps (mixed) callTapsParallel 1`] = `
 "do {
 var _counter = 3;
@@ -786,89 +399,6 @@
 "
 `;
 
-exports[`HookCodeFactory taps (mixed) callTapsParallel 2`] = `
-"do {
-  var _counter = 3;
-  var _done = function() {
-    onDone();
-  };
-  if (_counter <= 0) break;
-  var _fn0 = _x[0];
-  var _result0 = _fn0(a, b, c);
-  if (_counter > 0) {
-    onResult(
-      0,
-      _result0,
-      () => {
-        if (--_counter === 0) _done();
-      },
-      () => {
-        _counter = 0;
-        _done();
-      }
-    );
-  }
-  if (_counter <= 0) break;
-  var _fn1 = _x[1];
-  _fn1(a, b, c, function(_err1, _result1) {
-    if (_err1) {
-      if (_counter > 0) {
-        onError(1, _err1);
-      }
-    } else {
-      if (_counter > 0) {
-        onResult(
-          1,
-          _result1,
-          () => {
-            if (--_counter === 0) _done();
-          },
-          () => {
-            _counter = 0;
-            _done();
-          }
-        );
-      }
-    }
-  });
-  if (_counter <= 0) break;
-  var _fn2 = _x[2];
-  var _hasResult2 = false;
-  var _promise2 = _fn2(a, b, c);
-  if (!_promise2 || !_promise2.then)
-    throw new Error(
-      \\"Tap function (tapPromise) did not return promise (returned \\" +
-        _promise2 +
-        \\")\\"
-    );
-  _promise2.then(
-    function(_result2) {
-      _hasResult2 = true;
-      if (_counter > 0) {
-        onResult(
-          2,
-          _result2,
-          () => {
-            if (--_counter === 0) _done();
-          },
-          () => {
-            _counter = 0;
-            _done();
-          }
-        );
-      }
-    },
-    function(_err2) {
-      if (_hasResult2) throw _err2;
-      if (_counter > 0) {
-        onError(2, _err2);
-      }
-    }
-  );
-} while (false);
-"
-`;
-
 exports[`HookCodeFactory taps (mixed) callTapsSeries 1`] = `
 "function _next1() {
 var _fn2 = _x[2];
@@ -909,68 +439,6 @@
 "
 `;
 
-exports[`HookCodeFactory taps (mixed) callTapsSeries 2`] = `
-"function _next1() {
-  var _fn2 = _x[2];
-  var _hasResult2 = false;
-  var _promise2 = _fn2(a, b, c);
-  if (!_promise2 || !_promise2.then)
-    throw new Error(
-      \\"Tap function (tapPromise) did not return promise (returned \\" +
-        _promise2 +
-        \\")\\"
-    );
-  _promise2.then(
-    function(_result2) {
-      _hasResult2 = true;
-      onResult(
-        2,
-        _result2,
-        () => {
-          onDone();
-        },
-        () => {
-          onDone();
-        }
-      );
-    },
-    function(_err2) {
-      if (_hasResult2) throw _err2;
-      onError(2, _err2);
-    }
-  );
-}
-var _fn0 = _x[0];
-var _result0 = _fn0(a, b, c);
-onResult(
-  0,
-  _result0,
-  () => {
-    var _fn1 = _x[1];
-    _fn1(a, b, c, function(_err1, _result1) {
-      if (_err1) {
-        onError(1, _err1);
-      } else {
-        onResult(
-          1,
-          _result1,
-          () => {
-            _next1();
-          },
-          () => {
-            onDone();
-          }
-        );
-      }
-    });
-  },
-  () => {
-    onDone();
-  }
-);
-"
-`;
-
 exports[`HookCodeFactory taps (mixed2) callTapsLooping 1`] = `
 "var _looper = (function() {
 var _loopAsync = false;
@@ -1036,78 +504,6 @@
 "
 `;
 
-exports[`HookCodeFactory taps (mixed2) callTapsLooping 2`] = `
-"var _looper = function() {
-  var _loopAsync = false;
-  var _loop;
-  do {
-    _loop = false;
-    function _next1() {
-      var _fn2 = _x[2];
-      var _hasError2 = false;
-      try {
-        var _result2 = _fn2(a, b, c);
-      } catch (_err) {
-        _hasError2 = true;
-        onError(2, _err);
-      }
-      if (!_hasError2) {
-        if (_result2 !== undefined) {
-          _loop = true;
-          if (_loopAsync) _looper();
-        } else {
-          if (!_loop) {
-            onDone();
-          }
-        }
-      }
-    }
-    function _next0() {
-      var _fn1 = _x[1];
-      var _hasResult1 = false;
-      var _promise1 = _fn1(a, b, c);
-      if (!_promise1 || !_promise1.then)
-        throw new Error(
-          \\"Tap function (tapPromise) did not return promise (returned \\" +
-            _promise1 +
-            \\")\\"
-        );
-      _promise1.then(
-        function(_result1) {
-          _hasResult1 = true;
-          if (_result1 !== undefined) {
-            _loop = true;
-            if (_loopAsync) _looper();
-          } else {
-            _next1();
-          }
-        },
-        function(_err1) {
-          if (_hasResult1) throw _err1;
-          onError(1, _err1);
-        }
-      );
-    }
-    var _fn0 = _x[0];
-    _fn0(a, b, c, function(_err0, _result0) {
-      if (_err0) {
-        onError(0, _err0);
-      } else {
-        if (_result0 !== undefined) {
-          _loop = true;
-          if (_loopAsync) _looper();
-        } else {
-          _next0();
-        }
-      }
-    });
-  } while (_loop);
-  _loopAsync = true;
-};
-_looper();
-"
-`;
-
 exports[`HookCodeFactory taps (mixed2) callTapsParallel 1`] = `
 "do {
 var _counter = 3;
@@ -1169,89 +565,6 @@
 "
 `;
 
-exports[`HookCodeFactory taps (mixed2) callTapsParallel 2`] = `
-"do {
-  var _counter = 3;
-  var _done = function() {
-    onDone();
-  };
-  if (_counter <= 0) break;
-  var _fn0 = _x[0];
-  _fn0(a, b, c, function(_err0, _result0) {
-    if (_err0) {
-      if (_counter > 0) {
-        onError(0, _err0);
-      }
-    } else {
-      if (_counter > 0) {
-        onResult(
-          0,
-          _result0,
-          () => {
-            if (--_counter === 0) _done();
-          },
-          () => {
-            _counter = 0;
-            _done();
-          }
-        );
-      }
-    }
-  });
-  if (_counter <= 0) break;
-  var _fn1 = _x[1];
-  var _hasResult1 = false;
-  var _promise1 = _fn1(a, b, c);
-  if (!_promise1 || !_promise1.then)
-    throw new Error(
-      \\"Tap function (tapPromise) did not return promise (returned \\" +
-        _promise1 +
-        \\")\\"
-    );
-  _promise1.then(
-    function(_result1) {
-      _hasResult1 = true;
-      if (_counter > 0) {
-        onResult(
-          1,
-          _result1,
-          () => {
-            if (--_counter === 0) _done();
-          },
-          () => {
-            _counter = 0;
-            _done();
-          }
-        );
-      }
-    },
-    function(_err1) {
-      if (_hasResult1) throw _err1;
-      if (_counter > 0) {
-        onError(1, _err1);
-      }
-    }
-  );
-  if (_counter <= 0) break;
-  var _fn2 = _x[2];
-  var _result2 = _fn2(a, b, c);
-  if (_counter > 0) {
-    onResult(
-      2,
-      _result2,
-      () => {
-        if (--_counter === 0) _done();
-      },
-      () => {
-        _counter = 0;
-        _done();
-      }
-    );
-  }
-} while (false);
-"
-`;
-
 exports[`HookCodeFactory taps (mixed2) callTapsSeries 1`] = `
 "function _next1() {
 var _fn2 = _x[2];
@@ -1303,79 +616,6 @@
 "
 `;
 
-exports[`HookCodeFactory taps (mixed2) callTapsSeries 2`] = `
-"function _next1() {
-  var _fn2 = _x[2];
-  var _hasError2 = false;
-  try {
-    var _result2 = _fn2(a, b, c);
-  } catch (_err) {
-    _hasError2 = true;
-    onError(2, _err);
-  }
-  if (!_hasError2) {
-    onResult(
-      2,
-      _result2,
-      () => {
-        onDone();
-      },
-      () => {
-        onDone();
-      }
-    );
-  }
-}
-function _next0() {
-  var _fn1 = _x[1];
-  var _hasResult1 = false;
-  var _promise1 = _fn1(a, b, c);
-  if (!_promise1 || !_promise1.then)
-    throw new Error(
-      \\"Tap function (tapPromise) did not return promise (returned \\" +
-        _promise1 +
-        \\")\\"
-    );
-  _promise1.then(
-    function(_result1) {
-      _hasResult1 = true;
-      onResult(
-        1,
-        _result1,
-        () => {
-          _next1();
-        },
-        () => {
-          onDone();
-        }
-      );
-    },
-    function(_err1) {
-      if (_hasResult1) throw _err1;
-      onError(1, _err1);
-    }
-  );
-}
-var _fn0 = _x[0];
-_fn0(a, b, c, function(_err0, _result0) {
-  if (_err0) {
-    onError(0, _err0);
-  } else {
-    onResult(
-      0,
-      _result0,
-      () => {
-        _next0();
-      },
-      () => {
-        onDone();
-      }
-    );
-  }
-});
-"
-`;
-
 exports[`HookCodeFactory taps (multiple sync) callTapsLooping 1`] = `
 "var _loop;
 do {
@@ -1405,35 +645,6 @@
 "
 `;
 
-exports[`HookCodeFactory taps (multiple sync) callTapsLooping 2`] = `
-"var _loop;
-do {
-  _loop = false;
-  var _fn0 = _x[0];
-  var _result0 = _fn0(a, b, c);
-  if (_result0 !== undefined) {
-    _loop = true;
-  } else {
-    var _fn1 = _x[1];
-    var _result1 = _fn1(a, b, c);
-    if (_result1 !== undefined) {
-      _loop = true;
-    } else {
-      var _fn2 = _x[2];
-      var _result2 = _fn2(a, b, c);
-      if (_result2 !== undefined) {
-        _loop = true;
-      } else {
-        if (!_loop) {
-          onDone();
-        }
-      }
-    }
-  }
-} while (_loop);
-"
-`;
-
 exports[`HookCodeFactory taps (multiple sync) callTapsParallel 1`] = `
 "do {
 var _counter = 3;
@@ -1477,64 +688,6 @@
 "
 `;
 
-exports[`HookCodeFactory taps (multiple sync) callTapsParallel 2`] = `
-"do {
-  var _counter = 3;
-  var _done = function() {
-    onDone();
-  };
-  if (_counter <= 0) break;
-  var _fn0 = _x[0];
-  var _result0 = _fn0(a, b, c);
-  if (_counter > 0) {
-    onResult(
-      0,
-      _result0,
-      () => {
-        if (--_counter === 0) _done();
-      },
-      () => {
-        _counter = 0;
-        _done();
-      }
-    );
-  }
-  if (_counter <= 0) break;
-  var _fn1 = _x[1];
-  var _result1 = _fn1(a, b, c);
-  if (_counter > 0) {
-    onResult(
-      1,
-      _result1,
-      () => {
-        if (--_counter === 0) _done();
-      },
-      () => {
-        _counter = 0;
-        _done();
-      }
-    );
-  }
-  if (_counter <= 0) break;
-  var _fn2 = _x[2];
-  var _result2 = _fn2(a, b, c);
-  if (_counter > 0) {
-    onResult(
-      2,
-      _result2,
-      () => {
-        if (--_counter === 0) _done();
-      },
-      () => {
-        _counter = 0;
-        _done();
-      }
-    );
-  }
-} while (false);
-"
-`;
-
 exports[`HookCodeFactory taps (multiple sync) callTapsSeries 1`] = `
 "var _fn0 = _x[0];
 var _result0 = _fn0(a, b, c);
@@ -1558,74 +711,21 @@
 "
 `;
 
-exports[`HookCodeFactory taps (multiple sync) callTapsSeries 2`] = `
-"var _fn0 = _x[0];
-var _result0 = _fn0(a, b, c);
-onResult(
-  0,
-  _result0,
-  () => {
-    var _fn1 = _x[1];
-    var _result1 = _fn1(a, b, c);
-    onResult(
-      1,
-      _result1,
-      () => {
-        var _fn2 = _x[2];
-        var _result2 = _fn2(a, b, c);
-        onResult(
-          2,
-          _result2,
-          () => {
-            onDone();
-          },
-          () => {
-            onDone();
-          }
-        );
-      },
-      () => {
-        onDone();
-      }
-    );
-  },
-  () => {
-    onDone();
-  }
-);
-"
-`;
-
 exports[`HookCodeFactory taps (none) callTapsLooping 1`] = `
 "onDone();
 "
 `;
 
-exports[`HookCodeFactory taps (none) callTapsLooping 2`] = `
-"onDone();
-"
-`;
-
 exports[`HookCodeFactory taps (none) callTapsParallel 1`] = `
 "onDone();
 "
 `;
 
-exports[`HookCodeFactory taps (none) callTapsParallel 2`] = `
-"onDone();
-"
-`;
-
 exports[`HookCodeFactory taps (none) callTapsSeries 1`] = `
 "onDone();
 "
 `;
 
-exports[`HookCodeFactory taps (none) callTapsSeries 2`] = `
-"onDone();
-"
-`;
-
 exports[`HookCodeFactory taps (single async) callTapsLooping 1`] = `
 "var _looper = (function() {
 var _loopAsync = false;
@@ -1654,34 +754,6 @@
 "
 `;
 
-exports[`HookCodeFactory taps (single async) callTapsLooping 2`] = `
-"var _looper = function() {
-  var _loopAsync = false;
-  var _loop;
-  do {
-    _loop = false;
-    var _fn0 = _x[0];
-    _fn0(a, b, c, function(_err0, _result0) {
-      if (_err0) {
-        onError(0, _err0);
-      } else {
-        if (_result0 !== undefined) {
-          _loop = true;
-          if (_loopAsync) _looper();
-        } else {
-          if (!_loop) {
-            onDone();
-          }
-        }
-      }
-    });
-  } while (_loop);
-  _loopAsync = true;
-};
-_looper();
-"
-`;
-
 exports[`HookCodeFactory taps (single async) callTapsParallel 1`] = `
 "var _fn0 = _x[0];
 _fn0(a, b, c, (function(_err0, _result0) {
@@ -1698,27 +770,6 @@
 "
 `;
 
-exports[`HookCodeFactory taps (single async) callTapsParallel 2`] = `
-"var _fn0 = _x[0];
-_fn0(a, b, c, function(_err0, _result0) {
-  if (_err0) {
-    onError(0, _err0);
-  } else {
-    onResult(
-      0,
-      _result0,
-      () => {
-        onDone();
-      },
-      () => {
-        onDone();
-      }
-    );
-  }
-});
-"
-`;
-
 exports[`HookCodeFactory taps (single async) callTapsSeries 1`] = `
 "var _fn0 = _x[0];
 _fn0(a, b, c, (function(_err0, _result0) {
@@ -1735,27 +786,6 @@
 "
 `;
 
-exports[`HookCodeFactory taps (single async) callTapsSeries 2`] = `
-"var _fn0 = _x[0];
-_fn0(a, b, c, function(_err0, _result0) {
-  if (_err0) {
-    onError(0, _err0);
-  } else {
-    onResult(
-      0,
-      _result0,
-      () => {
-        onDone();
-      },
-      () => {
-        onDone();
-      }
-    );
-  }
-});
-"
-`;
-
 exports[`HookCodeFactory taps (single promise) callTapsLooping 1`] = `
 "var _looper = (function() {
 var _loopAsync = false;
@@ -1788,45 +818,6 @@
 "
 `;
 
-exports[`HookCodeFactory taps (single promise) callTapsLooping 2`] = `
-"var _looper = function() {
-  var _loopAsync = false;
-  var _loop;
-  do {
-    _loop = false;
-    var _fn0 = _x[0];
-    var _hasResult0 = false;
-    var _promise0 = _fn0(a, b, c);
-    if (!_promise0 || !_promise0.then)
-      throw new Error(
-        \\"Tap function (tapPromise) did not return promise (returned \\" +
-          _promise0 +
-          \\")\\"
-      );
-    _promise0.then(
-      function(_result0) {
-        _hasResult0 = true;
-        if (_result0 !== undefined) {
-          _loop = true;
-          if (_loopAsync) _looper();
-        } else {
-          if (!_loop) {
-            onDone();
-          }
-        }
-      },
-      function(_err0) {
-        if (_hasResult0) throw _err0;
-        onError(0, _err0);
-      }
-    );
-  } while (_loop);
-  _loopAsync = true;
-};
-_looper();
-"
-`;
-
 exports[`HookCodeFactory taps (single promise) callTapsParallel 1`] = `
 "var _fn0 = _x[0];
 var _hasResult0 = false;
@@ -1847,38 +838,6 @@
 "
 `;
 
-exports[`HookCodeFactory taps (single promise) callTapsParallel 2`] = `
-"var _fn0 = _x[0];
-var _hasResult0 = false;
-var _promise0 = _fn0(a, b, c);
-if (!_promise0 || !_promise0.then)
-  throw new Error(
-    \\"Tap function (tapPromise) did not return promise (returned \\" +
-      _promise0 +
-      \\")\\"
-  );
-_promise0.then(
-  function(_result0) {
-    _hasResult0 = true;
-    onResult(
-      0,
-      _result0,
-      () => {
-        onDone();
-      },
-      () => {
-        onDone();
-      }
-    );
-  },
-  function(_err0) {
-    if (_hasResult0) throw _err0;
-    onError(0, _err0);
-  }
-);
-"
-`;
-
 exports[`HookCodeFactory taps (single promise) callTapsSeries 1`] = `
 "var _fn0 = _x[0];
 var _hasResult0 = false;
@@ -1899,38 +858,6 @@
 "
 `;
 
-exports[`HookCodeFactory taps (single promise) callTapsSeries 2`] = `
-"var _fn0 = _x[0];
-var _hasResult0 = false;
-var _promise0 = _fn0(a, b, c);
-if (!_promise0 || !_promise0.then)
-  throw new Error(
-    \\"Tap function (tapPromise) did not return promise (returned \\" +
-      _promise0 +
-      \\")\\"
-  );
-_promise0.then(
-  function(_result0) {
-    _hasResult0 = true;
-    onResult(
-      0,
-      _result0,
-      () => {
-        onDone();
-      },
-      () => {
-        onDone();
-      }
-    );
-  },
-  function(_err0) {
-    if (_hasResult0) throw _err0;
-    onError(0, _err0);
-  }
-);
-"
-`;
-
 exports[`HookCodeFactory taps (single sync) callTapsLooping 1`] = `
 "var _loop;
 do {
@@ -1948,23 +875,6 @@
 "
 `;
 
-exports[`HookCodeFactory taps (single sync) callTapsLooping 2`] = `
-"var _loop;
-do {
-  _loop = false;
-  var _fn0 = _x[0];
-  var _result0 = _fn0(a, b, c);
-  if (_result0 !== undefined) {
-    _loop = true;
-  } else {
-    if (!_loop) {
-      onDone();
-    }
-  }
-} while (_loop);
-"
-`;
-
 exports[`HookCodeFactory taps (single sync) callTapsParallel 1`] = `
 "var _fn0 = _x[0];
 var _result0 = _fn0(a, b, c);
@@ -1976,22 +886,6 @@
 "
 `;
 
-exports[`HookCodeFactory taps (single sync) callTapsParallel 2`] = `
-"var _fn0 = _x[0];
-var _result0 = _fn0(a, b, c);
-onResult(
-  0,
-  _result0,
-  () => {
-    onDone();
-  },
-  () => {
-    onDone();
-  }
-);
-"
-`;
-
 exports[`HookCodeFactory taps (single sync) callTapsSeries 1`] = `
 "var _fn0 = _x[0];
 var _result0 = _fn0(a, b, c);
@@ -2002,19 +896,3 @@
 });
 "
 `;
-
-exports[`HookCodeFactory taps (single sync) callTapsSeries 2`] = `
-"var _fn0 = _x[0];
-var _result0 = _fn0(a, b, c);
-onResult(
-  0,
-  _result0,
-  () => {
-    onDone();
-  },
-  () => {
-    onDone();
-  }
-);
-"
-`;
--- a/lib/__tests__/__snapshots__/SyncHooks.js.snap
+++ b/lib/__tests__/__snapshots__/SyncHooks.js.snap
@@ -1,254 +1,254 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`SyncBailHook should have to correct behavior 1`] = `
-Object {
-  "async": Object {},
-  "intercept": Object {},
-  "sync": Object {
-    "callAsyncIntercepted": Object {
+{
+  "async": {},
+  "intercept": {},
+  "sync": {
+    "callAsyncIntercepted": {
       "type": "async",
       "value": 6,
     },
-    "callAsyncInterceptedCall1": Array [
+    "callAsyncInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedCall2": Array [
+    "callAsyncInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedTap1": Object {
+    "callAsyncInterceptedTap1": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "callAsyncInterceptedTap2": Object {
+    "callAsyncInterceptedTap2": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "callAsyncMultipleSync": Object {
+    "callAsyncMultipleSync": {
       "type": "async",
       "value": 42,
     },
     "callAsyncMultipleSyncCalled1": true,
-    "callAsyncMultipleSyncError": Object {
+    "callAsyncMultipleSyncError": {
       "error": "Error in sync2",
       "type": "async",
     },
     "callAsyncMultipleSyncErrorCalled1": true,
     "callAsyncMultipleSyncErrorCalled2": true,
-    "callAsyncMultipleSyncWithArg": Object {
+    "callAsyncMultipleSyncWithArg": {
       "type": "async",
       "value": 84,
     },
     "callAsyncMultipleSyncWithArgCalled1": 42,
-    "callAsyncMultipleSyncWithArgFirstReturn": Object {
+    "callAsyncMultipleSyncWithArgFirstReturn": {
       "type": "async",
       "value": 84,
     },
     "callAsyncMultipleSyncWithArgFirstReturnCalled1": 42,
-    "callAsyncMultipleSyncWithArgLastReturn": Object {
+    "callAsyncMultipleSyncWithArgLastReturn": {
       "type": "async",
       "value": 85,
     },
     "callAsyncMultipleSyncWithArgLastReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgLastReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgNoReturn": Object {
+    "callAsyncMultipleSyncWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgNoReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgNoReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgs": Object {
+    "callAsyncMultipleSyncWithArgs": {
       "type": "async",
       "value": 129,
     },
-    "callAsyncMultipleSyncWithArgsCalled1": Array [
+    "callAsyncMultipleSyncWithArgsCalled1": [
       42,
       43,
       44,
     ],
-    "callAsyncNone": Object {
+    "callAsyncNone": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncNoneWithArg": Object {
+    "callAsyncNoneWithArg": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncSingleSync": Object {
+    "callAsyncSingleSync": {
       "type": "async",
       "value": 42,
     },
     "callAsyncSingleSyncCalled": true,
-    "callAsyncSingleSyncWithArg": Object {
+    "callAsyncSingleSyncWithArg": {
       "type": "async",
       "value": 42,
     },
     "callAsyncSingleSyncWithArgCalled": 42,
-    "callIntercepted": Object {
+    "callIntercepted": {
       "type": "return",
       "value": 6,
     },
-    "callInterceptedCall1": Array [
+    "callInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "callInterceptedCall2": Array [
+    "callInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "callInterceptedTap1": Object {
+    "callInterceptedTap1": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "callInterceptedTap2": Object {
+    "callInterceptedTap2": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "callMultipleSync": Object {
+    "callMultipleSync": {
       "type": "return",
       "value": 42,
     },
     "callMultipleSyncCalled1": true,
-    "callMultipleSyncError": Object {
+    "callMultipleSyncError": {
       "error": "Error in sync2",
     },
     "callMultipleSyncErrorCalled1": true,
     "callMultipleSyncErrorCalled2": true,
-    "callMultipleSyncWithArg": Object {
+    "callMultipleSyncWithArg": {
       "type": "return",
       "value": 84,
     },
     "callMultipleSyncWithArgCalled1": 42,
-    "callMultipleSyncWithArgFirstReturn": Object {
+    "callMultipleSyncWithArgFirstReturn": {
       "type": "return",
       "value": 84,
     },
     "callMultipleSyncWithArgFirstReturnCalled1": 42,
-    "callMultipleSyncWithArgLastReturn": Object {
+    "callMultipleSyncWithArgLastReturn": {
       "type": "return",
       "value": 85,
     },
     "callMultipleSyncWithArgLastReturnCalled1": 42,
     "callMultipleSyncWithArgLastReturnCalled2": 42,
-    "callMultipleSyncWithArgNoReturn": Object {
+    "callMultipleSyncWithArgNoReturn": {
       "type": "no result",
     },
     "callMultipleSyncWithArgNoReturnCalled1": 42,
     "callMultipleSyncWithArgNoReturnCalled2": 42,
-    "callMultipleSyncWithArgs": Object {
+    "callMultipleSyncWithArgs": {
       "type": "return",
       "value": 129,
     },
-    "callMultipleSyncWithArgsCalled1": Array [
+    "callMultipleSyncWithArgsCalled1": [
       42,
       43,
       44,
     ],
-    "callNone": Object {
+    "callNone": {
       "type": "no result",
     },
-    "callNoneWithArg": Object {
+    "callNoneWithArg": {
       "type": "no result",
     },
-    "callSingleSync": Object {
+    "callSingleSync": {
       "type": "return",
       "value": 42,
     },
     "callSingleSyncCalled": true,
-    "callSingleSyncWithArg": Object {
+    "callSingleSyncWithArg": {
       "type": "return",
       "value": 42,
     },
     "callSingleSyncWithArgCalled": 42,
-    "promiseIntercepted": Object {
+    "promiseIntercepted": {
       "type": "promise",
       "value": 6,
     },
-    "promiseInterceptedCall1": Array [
+    "promiseInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedCall2": Array [
+    "promiseInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedTap1": Object {
+    "promiseInterceptedTap1": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "promiseInterceptedTap2": Object {
+    "promiseInterceptedTap2": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "promiseMultipleSync": Object {
+    "promiseMultipleSync": {
       "type": "promise",
       "value": 42,
     },
     "promiseMultipleSyncCalled1": true,
-    "promiseMultipleSyncError": Object {
+    "promiseMultipleSyncError": {
       "error": "Error in sync2",
       "type": "promise",
     },
     "promiseMultipleSyncErrorCalled1": true,
     "promiseMultipleSyncErrorCalled2": true,
-    "promiseMultipleSyncWithArg": Object {
+    "promiseMultipleSyncWithArg": {
       "type": "promise",
       "value": 84,
     },
     "promiseMultipleSyncWithArgCalled1": 42,
-    "promiseMultipleSyncWithArgFirstReturn": Object {
+    "promiseMultipleSyncWithArgFirstReturn": {
       "type": "promise",
       "value": 84,
     },
     "promiseMultipleSyncWithArgFirstReturnCalled1": 42,
-    "promiseMultipleSyncWithArgLastReturn": Object {
+    "promiseMultipleSyncWithArgLastReturn": {
       "type": "promise",
       "value": 85,
     },
     "promiseMultipleSyncWithArgLastReturnCalled1": 42,
     "promiseMultipleSyncWithArgLastReturnCalled2": 42,
-    "promiseMultipleSyncWithArgNoReturn": Object {
+    "promiseMultipleSyncWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgNoReturnCalled1": 42,
     "promiseMultipleSyncWithArgNoReturnCalled2": 42,
-    "promiseMultipleSyncWithArgs": Object {
+    "promiseMultipleSyncWithArgs": {
       "type": "promise",
       "value": 129,
     },
-    "promiseMultipleSyncWithArgsCalled1": Array [
+    "promiseMultipleSyncWithArgsCalled1": [
       42,
       43,
       44,
     ],
-    "promiseNone": Object {
+    "promiseNone": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseNoneWithArg": Object {
+    "promiseNoneWithArg": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseSingleSync": Object {
+    "promiseSingleSync": {
       "type": "promise",
       "value": 42,
     },
     "promiseSingleSyncCalled": true,
-    "promiseSingleSyncWithArg": Object {
+    "promiseSingleSyncWithArg": {
       "type": "promise",
       "value": 42,
     },
@@ -258,270 +258,270 @@
 `;
 
 exports[`SyncHook should have to correct behavior 1`] = `
-Object {
-  "async": Object {},
-  "intercept": Object {},
-  "sync": Object {
-    "callAsyncIntercepted": Object {
+{
+  "async": {},
+  "intercept": {},
+  "sync": {
+    "callAsyncIntercepted": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncInterceptedCall1": Array [
+    "callAsyncInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedCall2": Array [
+    "callAsyncInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedTap1": Object {
+    "callAsyncInterceptedTap1": {
       "fn": 2,
       "name": "sync2",
       "type": "sync",
     },
-    "callAsyncInterceptedTap2": Object {
+    "callAsyncInterceptedTap2": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "callAsyncMultipleSync": Object {
+    "callAsyncMultipleSync": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncCalled1": true,
     "callAsyncMultipleSyncCalled2": true,
-    "callAsyncMultipleSyncError": Object {
+    "callAsyncMultipleSyncError": {
       "error": "Error in sync2",
       "type": "async",
     },
     "callAsyncMultipleSyncErrorCalled1": true,
     "callAsyncMultipleSyncErrorCalled2": true,
-    "callAsyncMultipleSyncWithArg": Object {
+    "callAsyncMultipleSyncWithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgCalled1": 42,
     "callAsyncMultipleSyncWithArgCalled2": 42,
-    "callAsyncMultipleSyncWithArgFirstReturn": Object {
+    "callAsyncMultipleSyncWithArgFirstReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgFirstReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgFirstReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgLastReturn": Object {
+    "callAsyncMultipleSyncWithArgLastReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgLastReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgLastReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgNoReturn": Object {
+    "callAsyncMultipleSyncWithArgNoReturn": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncWithArgNoReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgNoReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgs": Object {
+    "callAsyncMultipleSyncWithArgs": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncMultipleSyncWithArgsCalled1": Array [
+    "callAsyncMultipleSyncWithArgsCalled1": [
       42,
       43,
       44,
     ],
-    "callAsyncMultipleSyncWithArgsCalled2": Array [
+    "callAsyncMultipleSyncWithArgsCalled2": [
       42,
       43,
       44,
     ],
-    "callAsyncNone": Object {
+    "callAsyncNone": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncNoneWithArg": Object {
+    "callAsyncNoneWithArg": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncSingleSync": Object {
+    "callAsyncSingleSync": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSingleSyncCalled": true,
-    "callAsyncSingleSyncWithArg": Object {
+    "callAsyncSingleSyncWithArg": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSingleSyncWithArgCalled": 42,
-    "callIntercepted": Object {
+    "callIntercepted": {
       "type": "no result",
     },
-    "callInterceptedCall1": Array [
+    "callInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "callInterceptedCall2": Array [
+    "callInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "callInterceptedTap1": Object {
+    "callInterceptedTap1": {
       "fn": 2,
       "name": "sync2",
       "type": "sync",
     },
-    "callInterceptedTap2": Object {
+    "callInterceptedTap2": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "callMultipleSync": Object {
+    "callMultipleSync": {
       "type": "no result",
     },
     "callMultipleSyncCalled1": true,
     "callMultipleSyncCalled2": true,
-    "callMultipleSyncError": Object {
+    "callMultipleSyncError": {
       "error": "Error in sync2",
     },
     "callMultipleSyncErrorCalled1": true,
     "callMultipleSyncErrorCalled2": true,
-    "callMultipleSyncWithArg": Object {
+    "callMultipleSyncWithArg": {
       "type": "no result",
     },
     "callMultipleSyncWithArgCalled1": 42,
     "callMultipleSyncWithArgCalled2": 42,
-    "callMultipleSyncWithArgFirstReturn": Object {
+    "callMultipleSyncWithArgFirstReturn": {
       "type": "no result",
     },
     "callMultipleSyncWithArgFirstReturnCalled1": 42,
     "callMultipleSyncWithArgFirstReturnCalled2": 42,
-    "callMultipleSyncWithArgLastReturn": Object {
+    "callMultipleSyncWithArgLastReturn": {
       "type": "no result",
     },
     "callMultipleSyncWithArgLastReturnCalled1": 42,
     "callMultipleSyncWithArgLastReturnCalled2": 42,
-    "callMultipleSyncWithArgNoReturn": Object {
+    "callMultipleSyncWithArgNoReturn": {
       "type": "no result",
     },
     "callMultipleSyncWithArgNoReturnCalled1": 42,
     "callMultipleSyncWithArgNoReturnCalled2": 42,
-    "callMultipleSyncWithArgs": Object {
+    "callMultipleSyncWithArgs": {
       "type": "no result",
     },
-    "callMultipleSyncWithArgsCalled1": Array [
+    "callMultipleSyncWithArgsCalled1": [
       42,
       43,
       44,
     ],
-    "callMultipleSyncWithArgsCalled2": Array [
+    "callMultipleSyncWithArgsCalled2": [
       42,
       43,
       44,
     ],
-    "callNone": Object {
+    "callNone": {
       "type": "no result",
     },
-    "callNoneWithArg": Object {
+    "callNoneWithArg": {
       "type": "no result",
     },
-    "callSingleSync": Object {
+    "callSingleSync": {
       "type": "no result",
     },
     "callSingleSyncCalled": true,
-    "callSingleSyncWithArg": Object {
+    "callSingleSyncWithArg": {
       "type": "no result",
     },
     "callSingleSyncWithArgCalled": 42,
-    "promiseIntercepted": Object {
+    "promiseIntercepted": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseInterceptedCall1": Array [
+    "promiseInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedCall2": Array [
+    "promiseInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedTap1": Object {
+    "promiseInterceptedTap1": {
       "fn": 2,
       "name": "sync2",
       "type": "sync",
     },
-    "promiseInterceptedTap2": Object {
+    "promiseInterceptedTap2": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "promiseMultipleSync": Object {
+    "promiseMultipleSync": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncCalled1": true,
     "promiseMultipleSyncCalled2": true,
-    "promiseMultipleSyncError": Object {
+    "promiseMultipleSyncError": {
       "error": "Error in sync2",
       "type": "promise",
     },
     "promiseMultipleSyncErrorCalled1": true,
     "promiseMultipleSyncErrorCalled2": true,
-    "promiseMultipleSyncWithArg": Object {
+    "promiseMultipleSyncWithArg": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgCalled1": 42,
     "promiseMultipleSyncWithArgCalled2": 42,
-    "promiseMultipleSyncWithArgFirstReturn": Object {
+    "promiseMultipleSyncWithArgFirstReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgFirstReturnCalled1": 42,
     "promiseMultipleSyncWithArgFirstReturnCalled2": 42,
-    "promiseMultipleSyncWithArgLastReturn": Object {
+    "promiseMultipleSyncWithArgLastReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgLastReturnCalled1": 42,
     "promiseMultipleSyncWithArgLastReturnCalled2": 42,
-    "promiseMultipleSyncWithArgNoReturn": Object {
+    "promiseMultipleSyncWithArgNoReturn": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncWithArgNoReturnCalled1": 42,
     "promiseMultipleSyncWithArgNoReturnCalled2": 42,
-    "promiseMultipleSyncWithArgs": Object {
+    "promiseMultipleSyncWithArgs": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseMultipleSyncWithArgsCalled1": Array [
+    "promiseMultipleSyncWithArgsCalled1": [
       42,
       43,
       44,
     ],
-    "promiseMultipleSyncWithArgsCalled2": Array [
+    "promiseMultipleSyncWithArgsCalled2": [
       42,
       43,
       44,
     ],
-    "promiseNone": Object {
+    "promiseNone": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseNoneWithArg": Object {
+    "promiseNoneWithArg": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseSingleSync": Object {
+    "promiseSingleSync": {
       "type": "promise",
       "value": undefined,
     },
     "promiseSingleSyncCalled": true,
-    "promiseSingleSyncWithArg": Object {
+    "promiseSingleSyncWithArg": {
       "type": "promise",
       "value": undefined,
     },
@@ -531,10 +531,10 @@
 `;
 
 exports[`SyncLoopHook should have to correct behavior 1`] = `
-Object {
-  "async": Object {},
-  "sync": Object {
-    "callAsyncInterceptedSync": Object {
+{
+  "async": {},
+  "sync": {
+    "callAsyncInterceptedSync": {
       "type": "async",
       "value": undefined,
     },
@@ -543,26 +543,26 @@
     "callAsyncInterceptedSyncCalledCall": 1,
     "callAsyncInterceptedSyncCalledLoop": 83,
     "callAsyncInterceptedSyncCalledTap": 125,
-    "callAsyncMultipleSync": Object {
+    "callAsyncMultipleSync": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncMultipleSyncCalled1": 83,
     "callAsyncMultipleSyncCalled2": 42,
-    "callAsyncNone": Object {
+    "callAsyncNone": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncNoneWithArg": Object {
+    "callAsyncNoneWithArg": {
       "type": "async",
       "value": undefined,
     },
-    "callAsyncSingleSync": Object {
+    "callAsyncSingleSync": {
       "type": "async",
       "value": undefined,
     },
     "callAsyncSingleSyncCalled": 42,
-    "callInterceptedSync": Object {
+    "callInterceptedSync": {
       "type": "no result",
     },
     "callInterceptedSyncCalled1": 83,
@@ -570,22 +570,22 @@
     "callInterceptedSyncCalledCall": 1,
     "callInterceptedSyncCalledLoop": 83,
     "callInterceptedSyncCalledTap": 125,
-    "callMultipleSync": Object {
+    "callMultipleSync": {
       "type": "no result",
     },
     "callMultipleSyncCalled1": 83,
     "callMultipleSyncCalled2": 42,
-    "callNone": Object {
+    "callNone": {
       "type": "no result",
     },
-    "callNoneWithArg": Object {
+    "callNoneWithArg": {
       "type": "no result",
     },
-    "callSingleSync": Object {
+    "callSingleSync": {
       "type": "no result",
     },
     "callSingleSyncCalled": 42,
-    "promiseInterceptedSync": Object {
+    "promiseInterceptedSync": {
       "type": "promise",
       "value": undefined,
     },
@@ -594,21 +594,21 @@
     "promiseInterceptedSyncCalledCall": 1,
     "promiseInterceptedSyncCalledLoop": 83,
     "promiseInterceptedSyncCalledTap": 125,
-    "promiseMultipleSync": Object {
+    "promiseMultipleSync": {
       "type": "promise",
       "value": undefined,
     },
     "promiseMultipleSyncCalled1": 83,
     "promiseMultipleSyncCalled2": 42,
-    "promiseNone": Object {
+    "promiseNone": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseNoneWithArg": Object {
+    "promiseNoneWithArg": {
       "type": "promise",
       "value": undefined,
     },
-    "promiseSingleSync": Object {
+    "promiseSingleSync": {
       "type": "promise",
       "value": undefined,
     },
@@ -618,255 +618,255 @@
 `;
 
 exports[`SyncWaterfallHook should have to correct behavior 1`] = `
-Object {
-  "async": Object {},
-  "intercept": Object {},
-  "sync": Object {
-    "callAsyncIntercepted": Object {
+{
+  "async": {},
+  "intercept": {},
+  "sync": {
+    "callAsyncIntercepted": {
       "type": "async",
       "value": 9,
     },
-    "callAsyncInterceptedCall1": Array [
+    "callAsyncInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedCall2": Array [
+    "callAsyncInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "callAsyncInterceptedTap1": Object {
+    "callAsyncInterceptedTap1": {
       "fn": 2,
       "name": "sync2",
       "type": "sync",
     },
-    "callAsyncInterceptedTap2": Object {
+    "callAsyncInterceptedTap2": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "callAsyncMultipleSync": Object {
+    "callAsyncMultipleSync": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncMultipleSyncError": Object {
+    "callAsyncMultipleSyncError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncMultipleSyncWithArg": Object {
+    "callAsyncMultipleSyncWithArg": {
       "type": "async",
       "value": 127,
     },
     "callAsyncMultipleSyncWithArgCalled1": 42,
     "callAsyncMultipleSyncWithArgCalled2": 84,
-    "callAsyncMultipleSyncWithArgFirstReturn": Object {
+    "callAsyncMultipleSyncWithArgFirstReturn": {
       "type": "async",
       "value": 84,
     },
     "callAsyncMultipleSyncWithArgFirstReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgFirstReturnCalled2": 84,
-    "callAsyncMultipleSyncWithArgLastReturn": Object {
+    "callAsyncMultipleSyncWithArgLastReturn": {
       "type": "async",
       "value": 85,
     },
     "callAsyncMultipleSyncWithArgLastReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgLastReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgNoReturn": Object {
+    "callAsyncMultipleSyncWithArgNoReturn": {
       "type": "async",
       "value": 42,
     },
     "callAsyncMultipleSyncWithArgNoReturnCalled1": 42,
     "callAsyncMultipleSyncWithArgNoReturnCalled2": 42,
-    "callAsyncMultipleSyncWithArgs": Object {
+    "callAsyncMultipleSyncWithArgs": {
       "type": "async",
       "value": 217,
     },
-    "callAsyncMultipleSyncWithArgsCalled1": Array [
+    "callAsyncMultipleSyncWithArgsCalled1": [
       42,
       43,
       44,
     ],
-    "callAsyncMultipleSyncWithArgsCalled2": Array [
+    "callAsyncMultipleSyncWithArgsCalled2": [
       129,
       43,
       44,
     ],
-    "callAsyncNone": Object {
+    "callAsyncNone": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncNoneWithArg": Object {
+    "callAsyncNoneWithArg": {
       "type": "async",
       "value": 42,
     },
-    "callAsyncSingleSync": Object {
+    "callAsyncSingleSync": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callAsyncSingleSyncWithArg": Object {
+    "callAsyncSingleSyncWithArg": {
       "type": "async",
       "value": 42,
     },
     "callAsyncSingleSyncWithArgCalled": 42,
-    "callIntercepted": Object {
+    "callIntercepted": {
       "type": "return",
       "value": 9,
     },
-    "callInterceptedCall1": Array [
+    "callInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "callInterceptedCall2": Array [
+    "callInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "callInterceptedTap1": Object {
+    "callInterceptedTap1": {
       "fn": 2,
       "name": "sync2",
       "type": "sync",
     },
-    "callInterceptedTap2": Object {
+    "callInterceptedTap2": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "callMultipleSync": Object {
+    "callMultipleSync": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callMultipleSyncError": Object {
+    "callMultipleSyncError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callMultipleSyncWithArg": Object {
+    "callMultipleSyncWithArg": {
       "type": "return",
       "value": 127,
     },
     "callMultipleSyncWithArgCalled1": 42,
     "callMultipleSyncWithArgCalled2": 84,
-    "callMultipleSyncWithArgFirstReturn": Object {
+    "callMultipleSyncWithArgFirstReturn": {
       "type": "return",
       "value": 84,
     },
     "callMultipleSyncWithArgFirstReturnCalled1": 42,
     "callMultipleSyncWithArgFirstReturnCalled2": 84,
-    "callMultipleSyncWithArgLastReturn": Object {
+    "callMultipleSyncWithArgLastReturn": {
       "type": "return",
       "value": 85,
     },
     "callMultipleSyncWithArgLastReturnCalled1": 42,
     "callMultipleSyncWithArgLastReturnCalled2": 42,
-    "callMultipleSyncWithArgNoReturn": Object {
+    "callMultipleSyncWithArgNoReturn": {
       "type": "return",
       "value": 42,
     },
     "callMultipleSyncWithArgNoReturnCalled1": 42,
     "callMultipleSyncWithArgNoReturnCalled2": 42,
-    "callMultipleSyncWithArgs": Object {
+    "callMultipleSyncWithArgs": {
       "type": "return",
       "value": 217,
     },
-    "callMultipleSyncWithArgsCalled1": Array [
+    "callMultipleSyncWithArgsCalled1": [
       42,
       43,
       44,
     ],
-    "callMultipleSyncWithArgsCalled2": Array [
+    "callMultipleSyncWithArgsCalled2": [
       129,
       43,
       44,
     ],
-    "callNone": Object {
+    "callNone": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callNoneWithArg": Object {
+    "callNoneWithArg": {
       "type": "return",
       "value": 42,
     },
-    "callSingleSync": Object {
+    "callSingleSync": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "callSingleSyncWithArg": Object {
+    "callSingleSyncWithArg": {
       "type": "return",
       "value": 42,
     },
     "callSingleSyncWithArgCalled": 42,
-    "promiseIntercepted": Object {
+    "promiseIntercepted": {
       "type": "promise",
       "value": 9,
     },
-    "promiseInterceptedCall1": Array [
+    "promiseInterceptedCall1": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedCall2": Array [
+    "promiseInterceptedCall2": [
       1,
       2,
       3,
     ],
-    "promiseInterceptedTap1": Object {
+    "promiseInterceptedTap1": {
       "fn": 2,
       "name": "sync2",
       "type": "sync",
     },
-    "promiseInterceptedTap2": Object {
+    "promiseInterceptedTap2": {
       "fn": 3,
       "name": "sync1",
       "type": "sync",
     },
-    "promiseMultipleSync": Object {
+    "promiseMultipleSync": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseMultipleSyncError": Object {
+    "promiseMultipleSyncError": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseMultipleSyncWithArg": Object {
+    "promiseMultipleSyncWithArg": {
       "type": "promise",
       "value": 127,
     },
     "promiseMultipleSyncWithArgCalled1": 42,
     "promiseMultipleSyncWithArgCalled2": 84,
-    "promiseMultipleSyncWithArgFirstReturn": Object {
+    "promiseMultipleSyncWithArgFirstReturn": {
       "type": "promise",
       "value": 84,
     },
     "promiseMultipleSyncWithArgFirstReturnCalled1": 42,
     "promiseMultipleSyncWithArgFirstReturnCalled2": 84,
-    "promiseMultipleSyncWithArgLastReturn": Object {
+    "promiseMultipleSyncWithArgLastReturn": {
       "type": "promise",
       "value": 85,
     },
     "promiseMultipleSyncWithArgLastReturnCalled1": 42,
     "promiseMultipleSyncWithArgLastReturnCalled2": 42,
-    "promiseMultipleSyncWithArgNoReturn": Object {
+    "promiseMultipleSyncWithArgNoReturn": {
       "type": "promise",
       "value": 42,
     },
     "promiseMultipleSyncWithArgNoReturnCalled1": 42,
     "promiseMultipleSyncWithArgNoReturnCalled2": 42,
-    "promiseMultipleSyncWithArgs": Object {
+    "promiseMultipleSyncWithArgs": {
       "type": "promise",
       "value": 217,
     },
-    "promiseMultipleSyncWithArgsCalled1": Array [
+    "promiseMultipleSyncWithArgsCalled1": [
       42,
       43,
       44,
     ],
-    "promiseMultipleSyncWithArgsCalled2": Array [
+    "promiseMultipleSyncWithArgsCalled2": [
       129,
       43,
       44,
     ],
-    "promiseNone": Object {
+    "promiseNone": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseNoneWithArg": Object {
+    "promiseNoneWithArg": {
       "type": "promise",
       "value": 42,
     },
-    "promiseSingleSync": Object {
+    "promiseSingleSync": {
       "error": "Waterfall hooks must have at least one argument",
     },
-    "promiseSingleSyncWithArg": Object {
+    "promiseSingleSyncWithArg": {
       "type": "promise",
       "value": 42,
     },
